/* eslint-disable */
/*Generated by GenDocu.com*/
// source: mt4.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.mt4grpc.AccountSummary', null, global);
goog.exportSymbol('proto.mt4grpc.AccountSummaryReply', null, global);
goog.exportSymbol('proto.mt4grpc.AccountSummaryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.AccountType', null, global);
goog.exportSymbol('proto.mt4grpc.Bar', null, global);
goog.exportSymbol('proto.mt4grpc.BarsForSymbol', null, global);
goog.exportSymbol('proto.mt4grpc.BrokerCompany', null, global);
goog.exportSymbol('proto.mt4grpc.BrokerSerachResult', null, global);
goog.exportSymbol('proto.mt4grpc.BrokerServer', null, global);
goog.exportSymbol('proto.mt4grpc.CheckConnectReply', null, global);
goog.exportSymbol('proto.mt4grpc.CheckConnectRequest', null, global);
goog.exportSymbol('proto.mt4grpc.ClientStatus', null, global);
goog.exportSymbol('proto.mt4grpc.ClosedOrdersReply', null, global);
goog.exportSymbol('proto.mt4grpc.ClosedOrdersRequest', null, global);
goog.exportSymbol('proto.mt4grpc.ConGroupSec', null, global);
goog.exportSymbol('proto.mt4grpc.ConSymbolGroup', null, global);
goog.exportSymbol('proto.mt4grpc.ConnectReply', null, global);
goog.exportSymbol('proto.mt4grpc.ConnectRequest', null, global);
goog.exportSymbol('proto.mt4grpc.DisconnectReply', null, global);
goog.exportSymbol('proto.mt4grpc.DisconnectRequest', null, global);
goog.exportSymbol('proto.mt4grpc.Error', null, global);
goog.exportSymbol('proto.mt4grpc.ErrorCode', null, global);
goog.exportSymbol('proto.mt4grpc.EventsReply', null, global);
goog.exportSymbol('proto.mt4grpc.EventsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.Execution', null, global);
goog.exportSymbol('proto.mt4grpc.GetClientsReply', null, global);
goog.exportSymbol('proto.mt4grpc.GetClientsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.GetLogsByUserReply', null, global);
goog.exportSymbol('proto.mt4grpc.GetLogsByUserRequest', null, global);
goog.exportSymbol('proto.mt4grpc.GetLogsReply', null, global);
goog.exportSymbol('proto.mt4grpc.GetLogsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.GroupsReply', null, global);
goog.exportSymbol('proto.mt4grpc.GroupsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.IsInvestorReply', null, global);
goog.exportSymbol('proto.mt4grpc.IsInvestorRequest', null, global);
goog.exportSymbol('proto.mt4grpc.LogEventLevel', null, global);
goog.exportSymbol('proto.mt4grpc.LogRec', null, global);
goog.exportSymbol('proto.mt4grpc.MarginMode', null, global);
goog.exportSymbol('proto.mt4grpc.MemUsage', null, global);
goog.exportSymbol('proto.mt4grpc.MemorySnapshotReply', null, global);
goog.exportSymbol('proto.mt4grpc.MemorySnapshotRequest', null, global);
goog.exportSymbol('proto.mt4grpc.MemoryUsageReply', null, global);
goog.exportSymbol('proto.mt4grpc.MemoryUsageRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnDisconnectReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnDisconnectRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnOrderProfitReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnOrderProfitRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnOrderUpdateReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnOrderUpdateRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnQuoteHistoryReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnQuoteHistoryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnQuoteReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnQuoteRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OnTickValueReply', null, global);
goog.exportSymbol('proto.mt4grpc.OnTickValueRequest', null, global);
goog.exportSymbol('proto.mt4grpc.Op', null, global);
goog.exportSymbol('proto.mt4grpc.OpenedOrderReply', null, global);
goog.exportSymbol('proto.mt4grpc.OpenedOrderRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OpenedOrdersReply', null, global);
goog.exportSymbol('proto.mt4grpc.OpenedOrdersRequest', null, global);
goog.exportSymbol('proto.mt4grpc.Order', null, global);
goog.exportSymbol('proto.mt4grpc.OrderCloseByReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderCloseByRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderCloseReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderCloseRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderDeleteReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderDeleteRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderHistoryReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderHistoryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderModifyReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderModifyRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderSendReply', null, global);
goog.exportSymbol('proto.mt4grpc.OrderSendRequest', null, global);
goog.exportSymbol('proto.mt4grpc.OrderUpdateEventArgs', null, global);
goog.exportSymbol('proto.mt4grpc.OrderUpdateSummary', null, global);
goog.exportSymbol('proto.mt4grpc.PingReply', null, global);
goog.exportSymbol('proto.mt4grpc.PingRequest', null, global);
goog.exportSymbol('proto.mt4grpc.PlacedType', null, global);
goog.exportSymbol('proto.mt4grpc.ProfitMode', null, global);
goog.exportSymbol('proto.mt4grpc.ProfitUpdate', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteEventArgs', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteHistoryEventArgs', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteHistoryManyReply', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteHistoryManyRequest', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteHistoryReply', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteHistoryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteReply', null, global);
goog.exportSymbol('proto.mt4grpc.QuoteRequest', null, global);
goog.exportSymbol('proto.mt4grpc.RequestQuoteHistoryReply', null, global);
goog.exportSymbol('proto.mt4grpc.RequestQuoteHistoryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SearchReply', null, global);
goog.exportSymbol('proto.mt4grpc.SearchRequest', null, global);
goog.exportSymbol('proto.mt4grpc.ServerTimezoneReply', null, global);
goog.exportSymbol('proto.mt4grpc.ServerTimezoneRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SetPlacedTypeReply', null, global);
goog.exportSymbol('proto.mt4grpc.SetPlacedTypeRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeManyReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeManyRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeOrderProfitReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeOrderProfitRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeOrderUpdateReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeOrderUpdateRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeQuoteHistoryReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeQuoteHistoryRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeTickValueReply', null, global);
goog.exportSymbol('proto.mt4grpc.SubscribeTickValueRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolInfo', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolParams', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolParamsManyReply', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolParamsManyRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolParamsReply', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolParamsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolTickValue', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolsReply', null, global);
goog.exportSymbol('proto.mt4grpc.SymbolsRequest', null, global);
goog.exportSymbol('proto.mt4grpc.Timeframe', null, global);
goog.exportSymbol('proto.mt4grpc.UnSubscribeManyReply', null, global);
goog.exportSymbol('proto.mt4grpc.UnSubscribeManyRequest', null, global);
goog.exportSymbol('proto.mt4grpc.UnSubscribeReply', null, global);
goog.exportSymbol('proto.mt4grpc.UnSubscribeRequest', null, global);
goog.exportSymbol('proto.mt4grpc.UpdateAction', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.Error.displayName = 'proto.mt4grpc.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ConnectRequest.displayName = 'proto.mt4grpc.ConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ConnectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ConnectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ConnectReply.displayName = 'proto.mt4grpc.ConnectReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.CheckConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.CheckConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.CheckConnectRequest.displayName = 'proto.mt4grpc.CheckConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.CheckConnectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.CheckConnectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.CheckConnectReply.displayName = 'proto.mt4grpc.CheckConnectReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.DisconnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.DisconnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.DisconnectRequest.displayName = 'proto.mt4grpc.DisconnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.DisconnectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.DisconnectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.DisconnectReply.displayName = 'proto.mt4grpc.DisconnectReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.AccountSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.AccountSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.AccountSummaryRequest.displayName = 'proto.mt4grpc.AccountSummaryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.AccountSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.AccountSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.AccountSummary.displayName = 'proto.mt4grpc.AccountSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.AccountSummaryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.AccountSummaryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.AccountSummaryReply.displayName = 'proto.mt4grpc.AccountSummaryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.GroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GroupsRequest.displayName = 'proto.mt4grpc.GroupsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ConSymbolGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ConSymbolGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ConSymbolGroup.displayName = 'proto.mt4grpc.ConSymbolGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GroupsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.GroupsReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.GroupsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GroupsReply.displayName = 'proto.mt4grpc.GroupsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.QuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteRequest.displayName = 'proto.mt4grpc.QuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteEventArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.QuoteEventArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteEventArgs.displayName = 'proto.mt4grpc.QuoteEventArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.QuoteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteReply.displayName = 'proto.mt4grpc.QuoteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OpenedOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OpenedOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OpenedOrdersRequest.displayName = 'proto.mt4grpc.OpenedOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.Order = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.Order, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.Order.displayName = 'proto.mt4grpc.Order';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OpenedOrdersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.OpenedOrdersReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.OpenedOrdersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OpenedOrdersReply.displayName = 'proto.mt4grpc.OpenedOrdersReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolsRequest.displayName = 'proto.mt4grpc.SymbolsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SymbolsReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SymbolsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolsReply.displayName = 'proto.mt4grpc.SymbolsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolParamsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolParamsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolParamsRequest.displayName = 'proto.mt4grpc.SymbolParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolParams.displayName = 'proto.mt4grpc.SymbolParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolInfo.displayName = 'proto.mt4grpc.SymbolInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ConGroupSec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.ConGroupSec.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.ConGroupSec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ConGroupSec.displayName = 'proto.mt4grpc.ConGroupSec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolParamsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolParamsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolParamsReply.displayName = 'proto.mt4grpc.SymbolParamsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ServerTimezoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ServerTimezoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ServerTimezoneRequest.displayName = 'proto.mt4grpc.ServerTimezoneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ServerTimezoneReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ServerTimezoneReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ServerTimezoneReply.displayName = 'proto.mt4grpc.ServerTimezoneReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.IsInvestorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.IsInvestorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.IsInvestorRequest.displayName = 'proto.mt4grpc.IsInvestorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.IsInvestorReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.IsInvestorReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.IsInvestorReply.displayName = 'proto.mt4grpc.IsInvestorReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolParamsManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SymbolParamsManyRequest.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SymbolParamsManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolParamsManyRequest.displayName = 'proto.mt4grpc.SymbolParamsManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolParamsManyReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SymbolParamsManyReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SymbolParamsManyReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolParamsManyReply.displayName = 'proto.mt4grpc.SymbolParamsManyReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OpenedOrderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OpenedOrderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OpenedOrderRequest.displayName = 'proto.mt4grpc.OpenedOrderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OpenedOrderReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OpenedOrderReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OpenedOrderReply.displayName = 'proto.mt4grpc.OpenedOrderReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderHistoryRequest.displayName = 'proto.mt4grpc.OrderHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.OrderHistoryReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.OrderHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderHistoryReply.displayName = 'proto.mt4grpc.OrderHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.QuoteHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteHistoryRequest.displayName = 'proto.mt4grpc.QuoteHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.Bar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.Bar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.Bar.displayName = 'proto.mt4grpc.Bar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.QuoteHistoryReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.QuoteHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteHistoryReply.displayName = 'proto.mt4grpc.QuoteHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteHistoryManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.QuoteHistoryManyRequest.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.QuoteHistoryManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteHistoryManyRequest.displayName = 'proto.mt4grpc.QuoteHistoryManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.BarsForSymbol = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.BarsForSymbol.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.BarsForSymbol, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.BarsForSymbol.displayName = 'proto.mt4grpc.BarsForSymbol';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteHistoryManyReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.QuoteHistoryManyReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.QuoteHistoryManyReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteHistoryManyReply.displayName = 'proto.mt4grpc.QuoteHistoryManyReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ClosedOrdersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ClosedOrdersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ClosedOrdersRequest.displayName = 'proto.mt4grpc.ClosedOrdersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ClosedOrdersReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.ClosedOrdersReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.ClosedOrdersReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ClosedOrdersReply.displayName = 'proto.mt4grpc.ClosedOrdersReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.RequestQuoteHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.RequestQuoteHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.RequestQuoteHistoryRequest.displayName = 'proto.mt4grpc.RequestQuoteHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.RequestQuoteHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.RequestQuoteHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.RequestQuoteHistoryReply.displayName = 'proto.mt4grpc.RequestQuoteHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SetPlacedTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SetPlacedTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SetPlacedTypeRequest.displayName = 'proto.mt4grpc.SetPlacedTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SetPlacedTypeReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SetPlacedTypeReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SetPlacedTypeReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SetPlacedTypeReply.displayName = 'proto.mt4grpc.SetPlacedTypeReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.PingRequest.displayName = 'proto.mt4grpc.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.PingReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.PingReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.PingReply.displayName = 'proto.mt4grpc.PingReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetLogsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.GetLogsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetLogsRequest.displayName = 'proto.mt4grpc.GetLogsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.LogRec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.LogRec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.LogRec.displayName = 'proto.mt4grpc.LogRec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetLogsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.GetLogsReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.GetLogsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetLogsReply.displayName = 'proto.mt4grpc.GetLogsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetLogsByUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.GetLogsByUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetLogsByUserRequest.displayName = 'proto.mt4grpc.GetLogsByUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetLogsByUserReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.GetLogsByUserReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.GetLogsByUserReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetLogsByUserReply.displayName = 'proto.mt4grpc.GetLogsByUserReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.MemorySnapshotRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.MemorySnapshotRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.MemorySnapshotRequest.displayName = 'proto.mt4grpc.MemorySnapshotRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.MemorySnapshotReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.MemorySnapshotReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.MemorySnapshotReply.displayName = 'proto.mt4grpc.MemorySnapshotReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SearchRequest.displayName = 'proto.mt4grpc.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.BrokerSerachResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.BrokerSerachResult.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.BrokerSerachResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.BrokerSerachResult.displayName = 'proto.mt4grpc.BrokerSerachResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.BrokerCompany = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.BrokerCompany.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.BrokerCompany, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.BrokerCompany.displayName = 'proto.mt4grpc.BrokerCompany';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.BrokerServer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.BrokerServer.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.BrokerServer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.BrokerServer.displayName = 'proto.mt4grpc.BrokerServer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SearchReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SearchReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SearchReply.displayName = 'proto.mt4grpc.SearchReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetClientsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.GetClientsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetClientsRequest.displayName = 'proto.mt4grpc.GetClientsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ClientStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.ClientStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ClientStatus.displayName = 'proto.mt4grpc.ClientStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.GetClientsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.GetClientsReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.GetClientsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.GetClientsReply.displayName = 'proto.mt4grpc.GetClientsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.MemoryUsageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.MemoryUsageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.MemoryUsageRequest.displayName = 'proto.mt4grpc.MemoryUsageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.MemUsage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.MemUsage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.MemUsage.displayName = 'proto.mt4grpc.MemUsage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.MemoryUsageReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.MemoryUsageReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.MemoryUsageReply.displayName = 'proto.mt4grpc.MemoryUsageReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeRequest.displayName = 'proto.mt4grpc.SubscribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeReply.displayName = 'proto.mt4grpc.SubscribeReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SubscribeManyRequest.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SubscribeManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeManyRequest.displayName = 'proto.mt4grpc.SubscribeManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeManyReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeManyReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeManyReply.displayName = 'proto.mt4grpc.SubscribeManyReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.UnSubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.UnSubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.UnSubscribeRequest.displayName = 'proto.mt4grpc.UnSubscribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.UnSubscribeReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.UnSubscribeReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.UnSubscribeReply.displayName = 'proto.mt4grpc.UnSubscribeReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.UnSubscribeManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.UnSubscribeManyRequest.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.UnSubscribeManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.UnSubscribeManyRequest.displayName = 'proto.mt4grpc.UnSubscribeManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.UnSubscribeManyReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.UnSubscribeManyReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.UnSubscribeManyReply.displayName = 'proto.mt4grpc.UnSubscribeManyReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeOrderProfitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeOrderProfitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeOrderProfitRequest.displayName = 'proto.mt4grpc.SubscribeOrderProfitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeOrderProfitReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SubscribeOrderProfitReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SubscribeOrderProfitReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeOrderProfitReply.displayName = 'proto.mt4grpc.SubscribeOrderProfitReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeTickValueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeTickValueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeTickValueRequest.displayName = 'proto.mt4grpc.SubscribeTickValueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeTickValueReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeTickValueReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeTickValueReply.displayName = 'proto.mt4grpc.SubscribeTickValueReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeOrderUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeOrderUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeOrderUpdateRequest.displayName = 'proto.mt4grpc.SubscribeOrderUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeOrderUpdateReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.SubscribeOrderUpdateReply.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.SubscribeOrderUpdateReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeOrderUpdateReply.displayName = 'proto.mt4grpc.SubscribeOrderUpdateReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeQuoteHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeQuoteHistoryRequest.displayName = 'proto.mt4grpc.SubscribeQuoteHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SubscribeQuoteHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SubscribeQuoteHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SubscribeQuoteHistoryReply.displayName = 'proto.mt4grpc.SubscribeQuoteHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderSendRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderSendRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderSendRequest.displayName = 'proto.mt4grpc.OrderSendRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderSendReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderSendReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderSendReply.displayName = 'proto.mt4grpc.OrderSendReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderModifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderModifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderModifyRequest.displayName = 'proto.mt4grpc.OrderModifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderModifyReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderModifyReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderModifyReply.displayName = 'proto.mt4grpc.OrderModifyReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderCloseByRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderCloseByRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderCloseByRequest.displayName = 'proto.mt4grpc.OrderCloseByRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderCloseByReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderCloseByReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderCloseByReply.displayName = 'proto.mt4grpc.OrderCloseByReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderDeleteRequest.displayName = 'proto.mt4grpc.OrderDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderDeleteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderDeleteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderDeleteReply.displayName = 'proto.mt4grpc.OrderDeleteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderCloseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderCloseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderCloseRequest.displayName = 'proto.mt4grpc.OrderCloseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderCloseReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderCloseReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderCloseReply.displayName = 'proto.mt4grpc.OrderCloseReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.EventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.EventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.EventsRequest.displayName = 'proto.mt4grpc.EventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.EventsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.EventsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.EventsReply.displayName = 'proto.mt4grpc.EventsReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnOrderUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnOrderUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnOrderUpdateRequest.displayName = 'proto.mt4grpc.OnOrderUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderUpdateSummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.OrderUpdateSummary.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.OrderUpdateSummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderUpdateSummary.displayName = 'proto.mt4grpc.OrderUpdateSummary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OrderUpdateEventArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OrderUpdateEventArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OrderUpdateEventArgs.displayName = 'proto.mt4grpc.OrderUpdateEventArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnOrderUpdateReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnOrderUpdateReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnOrderUpdateReply.displayName = 'proto.mt4grpc.OnOrderUpdateReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnQuoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnQuoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnQuoteRequest.displayName = 'proto.mt4grpc.OnQuoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnQuoteReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnQuoteReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnQuoteReply.displayName = 'proto.mt4grpc.OnQuoteReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnTickValueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnTickValueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnTickValueRequest.displayName = 'proto.mt4grpc.OnTickValueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.SymbolTickValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.SymbolTickValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.SymbolTickValue.displayName = 'proto.mt4grpc.SymbolTickValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnTickValueReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnTickValueReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnTickValueReply.displayName = 'proto.mt4grpc.OnTickValueReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnOrderProfitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnOrderProfitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnOrderProfitRequest.displayName = 'proto.mt4grpc.OnOrderProfitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.ProfitUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.ProfitUpdate.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.ProfitUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.ProfitUpdate.displayName = 'proto.mt4grpc.ProfitUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnOrderProfitReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnOrderProfitReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnOrderProfitReply.displayName = 'proto.mt4grpc.OnOrderProfitReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnQuoteHistoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnQuoteHistoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnQuoteHistoryRequest.displayName = 'proto.mt4grpc.OnQuoteHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.QuoteHistoryEventArgs = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mt4grpc.QuoteHistoryEventArgs.repeatedFields_, null);
};
goog.inherits(proto.mt4grpc.QuoteHistoryEventArgs, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.QuoteHistoryEventArgs.displayName = 'proto.mt4grpc.QuoteHistoryEventArgs';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnQuoteHistoryReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnQuoteHistoryReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnQuoteHistoryReply.displayName = 'proto.mt4grpc.OnQuoteHistoryReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnDisconnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnDisconnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnDisconnectRequest.displayName = 'proto.mt4grpc.OnDisconnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mt4grpc.OnDisconnectReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mt4grpc.OnDisconnectReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mt4grpc.OnDisconnectReply.displayName = 'proto.mt4grpc.OnDisconnectReply';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stacktrace: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.Error}
 */
proto.mt4grpc.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.Error;
  return proto.mt4grpc.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.Error}
 */
proto.mt4grpc.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mt4grpc.ErrorCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStacktrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStacktrace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ErrorCode code = 1;
 * @return {!proto.mt4grpc.ErrorCode}
 */
proto.mt4grpc.Error.prototype.getCode = function() {
  return /** @type {!proto.mt4grpc.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mt4grpc.ErrorCode} value
 * @return {!proto.mt4grpc.Error} returns this
 */
proto.mt4grpc.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.mt4grpc.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.Error} returns this
 */
proto.mt4grpc.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stackTrace = 3;
 * @return {string}
 */
proto.mt4grpc.Error.prototype.getStacktrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.Error} returns this
 */
proto.mt4grpc.Error.prototype.setStacktrace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: jspb.Message.getFieldWithDefault(msg, 1, 0),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    host: jspb.Message.getFieldWithDefault(msg, 3, ""),
    port: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ConnectRequest}
 */
proto.mt4grpc.ConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ConnectRequest;
  return proto.mt4grpc.ConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ConnectRequest}
 */
proto.mt4grpc.ConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 user = 1;
 * @return {number}
 */
proto.mt4grpc.ConnectRequest.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConnectRequest} returns this
 */
proto.mt4grpc.ConnectRequest.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.mt4grpc.ConnectRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ConnectRequest} returns this
 */
proto.mt4grpc.ConnectRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string host = 3;
 * @return {string}
 */
proto.mt4grpc.ConnectRequest.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ConnectRequest} returns this
 */
proto.mt4grpc.ConnectRequest.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 port = 4;
 * @return {number}
 */
proto.mt4grpc.ConnectRequest.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConnectRequest} returns this
 */
proto.mt4grpc.ConnectRequest.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ConnectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ConnectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ConnectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConnectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ConnectReply}
 */
proto.mt4grpc.ConnectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ConnectReply;
  return proto.mt4grpc.ConnectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ConnectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ConnectReply}
 */
proto.mt4grpc.ConnectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ConnectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ConnectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ConnectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConnectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.ConnectReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ConnectReply} returns this
 */
proto.mt4grpc.ConnectReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.ConnectReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.ConnectReply} returns this
*/
proto.mt4grpc.ConnectReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.ConnectReply} returns this
 */
proto.mt4grpc.ConnectReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.ConnectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.CheckConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.CheckConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.CheckConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.CheckConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.CheckConnectRequest}
 */
proto.mt4grpc.CheckConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.CheckConnectRequest;
  return proto.mt4grpc.CheckConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.CheckConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.CheckConnectRequest}
 */
proto.mt4grpc.CheckConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.CheckConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.CheckConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.CheckConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.CheckConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.CheckConnectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.CheckConnectRequest} returns this
 */
proto.mt4grpc.CheckConnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.CheckConnectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.CheckConnectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.CheckConnectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.CheckConnectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.CheckConnectReply}
 */
proto.mt4grpc.CheckConnectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.CheckConnectReply;
  return proto.mt4grpc.CheckConnectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.CheckConnectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.CheckConnectReply}
 */
proto.mt4grpc.CheckConnectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.CheckConnectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.CheckConnectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.CheckConnectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.CheckConnectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.CheckConnectReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.CheckConnectReply} returns this
 */
proto.mt4grpc.CheckConnectReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.CheckConnectReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.CheckConnectReply} returns this
*/
proto.mt4grpc.CheckConnectReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.CheckConnectReply} returns this
 */
proto.mt4grpc.CheckConnectReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.CheckConnectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.DisconnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.DisconnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.DisconnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.DisconnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.DisconnectRequest}
 */
proto.mt4grpc.DisconnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.DisconnectRequest;
  return proto.mt4grpc.DisconnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.DisconnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.DisconnectRequest}
 */
proto.mt4grpc.DisconnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.DisconnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.DisconnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.DisconnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.DisconnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.DisconnectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.DisconnectRequest} returns this
 */
proto.mt4grpc.DisconnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.DisconnectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.DisconnectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.DisconnectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.DisconnectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.DisconnectReply}
 */
proto.mt4grpc.DisconnectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.DisconnectReply;
  return proto.mt4grpc.DisconnectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.DisconnectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.DisconnectReply}
 */
proto.mt4grpc.DisconnectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.DisconnectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.DisconnectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.DisconnectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.DisconnectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.DisconnectReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.DisconnectReply} returns this
 */
proto.mt4grpc.DisconnectReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.DisconnectReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.DisconnectReply} returns this
*/
proto.mt4grpc.DisconnectReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.DisconnectReply} returns this
 */
proto.mt4grpc.DisconnectReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.DisconnectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.AccountSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.AccountSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.AccountSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.AccountSummaryRequest}
 */
proto.mt4grpc.AccountSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.AccountSummaryRequest;
  return proto.mt4grpc.AccountSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.AccountSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.AccountSummaryRequest}
 */
proto.mt4grpc.AccountSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.AccountSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.AccountSummaryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.AccountSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.AccountSummaryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.AccountSummaryRequest} returns this
 */
proto.mt4grpc.AccountSummaryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.AccountSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.AccountSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.AccountSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    credit: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    equity: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    margin: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    freemargin: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    marginlevel: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    leverage: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 9, ""),
    type: jspb.Message.getFieldWithDefault(msg, 10, 0),
    isinvestor: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.AccountSummary}
 */
proto.mt4grpc.AccountSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.AccountSummary;
  return proto.mt4grpc.AccountSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.AccountSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.AccountSummary}
 */
proto.mt4grpc.AccountSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCredit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProfit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEquity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMargin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFreemargin(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMarginlevel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLeverage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 10:
      var value = /** @type {!proto.mt4grpc.AccountType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsinvestor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.AccountSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.AccountSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.AccountSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCredit();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getEquity();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getFreemargin();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getMarginlevel();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getLeverage();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getIsinvestor();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional double Balance = 1;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double Credit = 2;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getCredit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setCredit = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Profit = 3;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double Equity = 4;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getEquity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setEquity = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double Margin = 5;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getMargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setMargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double FreeMargin = 6;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getFreemargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setFreemargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double MarginLevel = 7;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getMarginlevel = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setMarginlevel = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double Leverage = 8;
 * @return {number}
 */
proto.mt4grpc.AccountSummary.prototype.getLeverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setLeverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string Currency = 9;
 * @return {string}
 */
proto.mt4grpc.AccountSummary.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional AccountType Type = 10;
 * @return {!proto.mt4grpc.AccountType}
 */
proto.mt4grpc.AccountSummary.prototype.getType = function() {
  return /** @type {!proto.mt4grpc.AccountType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.mt4grpc.AccountType} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional bool IsInvestor = 11;
 * @return {boolean}
 */
proto.mt4grpc.AccountSummary.prototype.getIsinvestor = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mt4grpc.AccountSummary} returns this
 */
proto.mt4grpc.AccountSummary.prototype.setIsinvestor = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.AccountSummaryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.AccountSummaryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.AccountSummaryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummaryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.AccountSummary.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.AccountSummaryReply}
 */
proto.mt4grpc.AccountSummaryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.AccountSummaryReply;
  return proto.mt4grpc.AccountSummaryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.AccountSummaryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.AccountSummaryReply}
 */
proto.mt4grpc.AccountSummaryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.AccountSummary;
      reader.readMessage(value,proto.mt4grpc.AccountSummary.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.AccountSummaryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.AccountSummaryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.AccountSummaryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.AccountSummaryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.AccountSummary.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccountSummary result = 1;
 * @return {?proto.mt4grpc.AccountSummary}
 */
proto.mt4grpc.AccountSummaryReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.AccountSummary} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.AccountSummary, 1));
};


/**
 * @param {?proto.mt4grpc.AccountSummary|undefined} value
 * @return {!proto.mt4grpc.AccountSummaryReply} returns this
*/
proto.mt4grpc.AccountSummaryReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.AccountSummaryReply} returns this
 */
proto.mt4grpc.AccountSummaryReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.AccountSummaryReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.AccountSummaryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.AccountSummaryReply} returns this
*/
proto.mt4grpc.AccountSummaryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.AccountSummaryReply} returns this
 */
proto.mt4grpc.AccountSummaryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.AccountSummaryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GroupsRequest}
 */
proto.mt4grpc.GroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GroupsRequest;
  return proto.mt4grpc.GroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GroupsRequest}
 */
proto.mt4grpc.GroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.GroupsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.GroupsRequest} returns this
 */
proto.mt4grpc.GroupsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ConSymbolGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ConSymbolGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ConSymbolGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConSymbolGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ConSymbolGroup}
 */
proto.mt4grpc.ConSymbolGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ConSymbolGroup;
  return proto.mt4grpc.ConSymbolGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ConSymbolGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ConSymbolGroup}
 */
proto.mt4grpc.ConSymbolGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ConSymbolGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ConSymbolGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ConSymbolGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConSymbolGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.mt4grpc.ConSymbolGroup.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ConSymbolGroup} returns this
 */
proto.mt4grpc.ConSymbolGroup.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.mt4grpc.ConSymbolGroup.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ConSymbolGroup} returns this
 */
proto.mt4grpc.ConSymbolGroup.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.GroupsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GroupsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GroupsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GroupsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GroupsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.ConSymbolGroup.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GroupsReply}
 */
proto.mt4grpc.GroupsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GroupsReply;
  return proto.mt4grpc.GroupsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GroupsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GroupsReply}
 */
proto.mt4grpc.GroupsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.ConSymbolGroup;
      reader.readMessage(value,proto.mt4grpc.ConSymbolGroup.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GroupsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GroupsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GroupsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GroupsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.ConSymbolGroup.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ConSymbolGroup result = 1;
 * @return {!Array<!proto.mt4grpc.ConSymbolGroup>}
 */
proto.mt4grpc.GroupsReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.ConSymbolGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.ConSymbolGroup, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.ConSymbolGroup>} value
 * @return {!proto.mt4grpc.GroupsReply} returns this
*/
proto.mt4grpc.GroupsReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.ConSymbolGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.ConSymbolGroup}
 */
proto.mt4grpc.GroupsReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.ConSymbolGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.GroupsReply} returns this
 */
proto.mt4grpc.GroupsReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.GroupsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.GroupsReply} returns this
*/
proto.mt4grpc.GroupsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.GroupsReply} returns this
 */
proto.mt4grpc.GroupsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.GroupsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteRequest}
 */
proto.mt4grpc.QuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteRequest;
  return proto.mt4grpc.QuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteRequest}
 */
proto.mt4grpc.QuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.QuoteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteRequest} returns this
 */
proto.mt4grpc.QuoteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.QuoteRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteRequest} returns this
 */
proto.mt4grpc.QuoteRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteEventArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteEventArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteEventArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteEventArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    bid: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    ask: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    high: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    low: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteEventArgs}
 */
proto.mt4grpc.QuoteEventArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteEventArgs;
  return proto.mt4grpc.QuoteEventArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteEventArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteEventArgs}
 */
proto.mt4grpc.QuoteEventArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAsk(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHigh(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteEventArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteEventArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteEventArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteEventArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBid();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getAsk();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getHigh();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getLow();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional string Symbol = 1;
 * @return {string}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double Bid = 2;
 * @return {number}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getBid = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.setBid = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Ask = 3;
 * @return {number}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getAsk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.setAsk = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp Time = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
*/
proto.mt4grpc.QuoteEventArgs.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.QuoteEventArgs.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double High = 5;
 * @return {number}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.setHigh = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double Low = 6;
 * @return {number}
 */
proto.mt4grpc.QuoteEventArgs.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteEventArgs} returns this
 */
proto.mt4grpc.QuoteEventArgs.prototype.setLow = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.QuoteEventArgs.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteReply}
 */
proto.mt4grpc.QuoteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteReply;
  return proto.mt4grpc.QuoteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteReply}
 */
proto.mt4grpc.QuoteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.QuoteEventArgs;
      reader.readMessage(value,proto.mt4grpc.QuoteEventArgs.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.QuoteEventArgs.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional QuoteEventArgs result = 1;
 * @return {?proto.mt4grpc.QuoteEventArgs}
 */
proto.mt4grpc.QuoteReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.QuoteEventArgs} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.QuoteEventArgs, 1));
};


/**
 * @param {?proto.mt4grpc.QuoteEventArgs|undefined} value
 * @return {!proto.mt4grpc.QuoteReply} returns this
*/
proto.mt4grpc.QuoteReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.QuoteReply} returns this
 */
proto.mt4grpc.QuoteReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.QuoteReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.QuoteReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.QuoteReply} returns this
*/
proto.mt4grpc.QuoteReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.QuoteReply} returns this
 */
proto.mt4grpc.QuoteReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.QuoteReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OpenedOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OpenedOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OpenedOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OpenedOrdersRequest}
 */
proto.mt4grpc.OpenedOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OpenedOrdersRequest;
  return proto.mt4grpc.OpenedOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OpenedOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OpenedOrdersRequest}
 */
proto.mt4grpc.OpenedOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OpenedOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OpenedOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OpenedOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OpenedOrdersRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OpenedOrdersRequest} returns this
 */
proto.mt4grpc.OpenedOrdersRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.Order.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.Order.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.Order} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Order.toObject = function(includeInstance, msg) {
  var f, obj = {
    placedtype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ticket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    opentime: (f = msg.getOpentime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    closetime: (f = msg.getClosetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiration: (f = msg.getExpiration()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    lots: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    symbol: jspb.Message.getFieldWithDefault(msg, 8, ""),
    openprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    stoploss: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    takeprofit: jspb.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    closeprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    magicnumber: jspb.Message.getFieldWithDefault(msg, 13, 0),
    swap: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    commission: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    comment: jspb.Message.getFieldWithDefault(msg, 16, ""),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    rateopen: jspb.Message.getFloatingPointFieldWithDefault(msg, 18, 0.0),
    rateclose: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    ratemargin: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.Order.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.Order;
  return proto.mt4grpc.Order.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.Order} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.Order.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mt4grpc.PlacedType} */ (reader.readEnum());
      msg.setPlacedtype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setOpentime(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setClosetime(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiration(value);
      break;
    case 6:
      var value = /** @type {!proto.mt4grpc.Op} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLots(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpenprice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeprofit(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCloseprice(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMagicnumber(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwap(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommission(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProfit(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRateopen(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRateclose(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRatemargin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.Order.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.Order.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.Order} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Order.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlacedtype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOpentime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getClosetime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiration();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getLots();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOpenprice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getStoploss();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getTakeprofit();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getCloseprice();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getMagicnumber();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getSwap();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getCommission();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getRateopen();
  if (f !== 0.0) {
    writer.writeDouble(
      18,
      f
    );
  }
  f = message.getRateclose();
  if (f !== 0.0) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = message.getRatemargin();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
};


/**
 * optional PlacedType PlacedType = 1;
 * @return {!proto.mt4grpc.PlacedType}
 */
proto.mt4grpc.Order.prototype.getPlacedtype = function() {
  return /** @type {!proto.mt4grpc.PlacedType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mt4grpc.PlacedType} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setPlacedtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 Ticket = 2;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getTicket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setTicket = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp OpenTime = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.Order.prototype.getOpentime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.Order} returns this
*/
proto.mt4grpc.Order.prototype.setOpentime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.clearOpentime = function() {
  return this.setOpentime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.Order.prototype.hasOpentime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp CloseTime = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.Order.prototype.getClosetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.Order} returns this
*/
proto.mt4grpc.Order.prototype.setClosetime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.clearClosetime = function() {
  return this.setClosetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.Order.prototype.hasClosetime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp Expiration = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.Order.prototype.getExpiration = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.Order} returns this
*/
proto.mt4grpc.Order.prototype.setExpiration = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.clearExpiration = function() {
  return this.setExpiration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.Order.prototype.hasExpiration = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Op Type = 6;
 * @return {!proto.mt4grpc.Op}
 */
proto.mt4grpc.Order.prototype.getType = function() {
  return /** @type {!proto.mt4grpc.Op} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.mt4grpc.Op} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional double Lots = 7;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getLots = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setLots = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string Symbol = 8;
 * @return {string}
 */
proto.mt4grpc.Order.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double OpenPrice = 9;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getOpenprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setOpenprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double StopLoss = 10;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setStoploss = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double TakeProfit = 11;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getTakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setTakeprofit = function(value) {
  return jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double ClosePrice = 12;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getCloseprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setCloseprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int32 MagicNumber = 13;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getMagicnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setMagicnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional double Swap = 14;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getSwap = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setSwap = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double Commission = 15;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getCommission = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setCommission = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional string Comment = 16;
 * @return {string}
 */
proto.mt4grpc.Order.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional double Profit = 17;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional double RateOpen = 18;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getRateopen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 18, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setRateopen = function(value) {
  return jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional double RateClose = 19;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getRateclose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setRateclose = function(value) {
  return jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional double RateMargin = 20;
 * @return {number}
 */
proto.mt4grpc.Order.prototype.getRatemargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Order} returns this
 */
proto.mt4grpc.Order.prototype.setRatemargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.OpenedOrdersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OpenedOrdersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OpenedOrdersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrdersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OpenedOrdersReply}
 */
proto.mt4grpc.OpenedOrdersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OpenedOrdersReply;
  return proto.mt4grpc.OpenedOrdersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OpenedOrdersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OpenedOrdersReply}
 */
proto.mt4grpc.OpenedOrdersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OpenedOrdersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OpenedOrdersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrdersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.OpenedOrdersReply} returns this
*/
proto.mt4grpc.OpenedOrdersReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.OpenedOrdersReply} returns this
 */
proto.mt4grpc.OpenedOrdersReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OpenedOrdersReply} returns this
*/
proto.mt4grpc.OpenedOrdersReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OpenedOrdersReply} returns this
 */
proto.mt4grpc.OpenedOrdersReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OpenedOrdersReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolsRequest}
 */
proto.mt4grpc.SymbolsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolsRequest;
  return proto.mt4grpc.SymbolsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolsRequest}
 */
proto.mt4grpc.SymbolsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SymbolsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolsRequest} returns this
 */
proto.mt4grpc.SymbolsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SymbolsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolsReply}
 */
proto.mt4grpc.SymbolsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolsReply;
  return proto.mt4grpc.SymbolsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolsReply}
 */
proto.mt4grpc.SymbolsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string result = 1;
 * @return {!Array<string>}
 */
proto.mt4grpc.SymbolsReply.prototype.getResultList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.SymbolsReply} returns this
 */
proto.mt4grpc.SymbolsReply.prototype.setResultList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.SymbolsReply} returns this
 */
proto.mt4grpc.SymbolsReply.prototype.addResult = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SymbolsReply} returns this
 */
proto.mt4grpc.SymbolsReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SymbolsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SymbolsReply} returns this
*/
proto.mt4grpc.SymbolsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolsReply} returns this
 */
proto.mt4grpc.SymbolsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolParamsRequest}
 */
proto.mt4grpc.SymbolParamsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolParamsRequest;
  return proto.mt4grpc.SymbolParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolParamsRequest}
 */
proto.mt4grpc.SymbolParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolParamsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SymbolParamsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolParamsRequest} returns this
 */
proto.mt4grpc.SymbolParamsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.SymbolParamsRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolParamsRequest} returns this
 */
proto.mt4grpc.SymbolParamsRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolParams.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbolname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: (f = msg.getSymbol()) && proto.mt4grpc.SymbolInfo.toObject(includeInstance, f),
    group: (f = msg.getGroup()) && proto.mt4grpc.ConSymbolGroup.toObject(includeInstance, f),
    groupparams: (f = msg.getGroupparams()) && proto.mt4grpc.ConGroupSec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolParams}
 */
proto.mt4grpc.SymbolParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolParams;
  return proto.mt4grpc.SymbolParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolParams}
 */
proto.mt4grpc.SymbolParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbolname(value);
      break;
    case 2:
      var value = new proto.mt4grpc.SymbolInfo;
      reader.readMessage(value,proto.mt4grpc.SymbolInfo.deserializeBinaryFromReader);
      msg.setSymbol(value);
      break;
    case 3:
      var value = new proto.mt4grpc.ConSymbolGroup;
      reader.readMessage(value,proto.mt4grpc.ConSymbolGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    case 4:
      var value = new proto.mt4grpc.ConGroupSec;
      reader.readMessage(value,proto.mt4grpc.ConGroupSec.deserializeBinaryFromReader);
      msg.setGroupparams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbolname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.SymbolInfo.serializeBinaryToWriter
    );
  }
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mt4grpc.ConSymbolGroup.serializeBinaryToWriter
    );
  }
  f = message.getGroupparams();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mt4grpc.ConGroupSec.serializeBinaryToWriter
    );
  }
};


/**
 * optional string SymbolName = 1;
 * @return {string}
 */
proto.mt4grpc.SymbolParams.prototype.getSymbolname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolParams} returns this
 */
proto.mt4grpc.SymbolParams.prototype.setSymbolname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SymbolInfo Symbol = 2;
 * @return {?proto.mt4grpc.SymbolInfo}
 */
proto.mt4grpc.SymbolParams.prototype.getSymbol = function() {
  return /** @type{?proto.mt4grpc.SymbolInfo} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.SymbolInfo, 2));
};


/**
 * @param {?proto.mt4grpc.SymbolInfo|undefined} value
 * @return {!proto.mt4grpc.SymbolParams} returns this
*/
proto.mt4grpc.SymbolParams.prototype.setSymbol = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParams} returns this
 */
proto.mt4grpc.SymbolParams.prototype.clearSymbol = function() {
  return this.setSymbol(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParams.prototype.hasSymbol = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ConSymbolGroup Group = 3;
 * @return {?proto.mt4grpc.ConSymbolGroup}
 */
proto.mt4grpc.SymbolParams.prototype.getGroup = function() {
  return /** @type{?proto.mt4grpc.ConSymbolGroup} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.ConSymbolGroup, 3));
};


/**
 * @param {?proto.mt4grpc.ConSymbolGroup|undefined} value
 * @return {!proto.mt4grpc.SymbolParams} returns this
*/
proto.mt4grpc.SymbolParams.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParams} returns this
 */
proto.mt4grpc.SymbolParams.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParams.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ConGroupSec GroupParams = 4;
 * @return {?proto.mt4grpc.ConGroupSec}
 */
proto.mt4grpc.SymbolParams.prototype.getGroupparams = function() {
  return /** @type{?proto.mt4grpc.ConGroupSec} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.ConGroupSec, 4));
};


/**
 * @param {?proto.mt4grpc.ConGroupSec|undefined} value
 * @return {!proto.mt4grpc.SymbolParams} returns this
*/
proto.mt4grpc.SymbolParams.prototype.setGroupparams = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParams} returns this
 */
proto.mt4grpc.SymbolParams.prototype.clearGroupparams = function() {
  return this.setGroupparams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParams.prototype.hasGroupparams = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    execution: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stopslevel: jspb.Message.getFieldWithDefault(msg, 2, 0),
    digits: jspb.Message.getFieldWithDefault(msg, 3, 0),
    point: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    swaplong: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    swapshort: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    spread: jspb.Message.getFieldWithDefault(msg, 7, 0),
    freezelevel: jspb.Message.getFieldWithDefault(msg, 8, 0),
    margincurrency: jspb.Message.getFieldWithDefault(msg, 9, ""),
    profitmode: jspb.Message.getFieldWithDefault(msg, 10, 0),
    marginmode: jspb.Message.getFieldWithDefault(msg, 11, 0),
    contractsize: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 13, ""),
    margindivider: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    code: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolInfo}
 */
proto.mt4grpc.SymbolInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolInfo;
  return proto.mt4grpc.SymbolInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolInfo}
 */
proto.mt4grpc.SymbolInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.mt4grpc.Execution} */ (reader.readEnum());
      msg.setExecution(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStopslevel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDigits(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPoint(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwaplong(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSwapshort(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpread(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreezelevel(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMargincurrency(value);
      break;
    case 10:
      var value = /** @type {!proto.mt4grpc.ProfitMode} */ (reader.readEnum());
      msg.setProfitmode(value);
      break;
    case 11:
      var value = /** @type {!proto.mt4grpc.MarginMode} */ (reader.readEnum());
      msg.setMarginmode(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setContractsize(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMargindivider(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecution();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStopslevel();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDigits();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPoint();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSwaplong();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSwapshort();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSpread();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getFreezelevel();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getMargincurrency();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProfitmode();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getMarginmode();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getContractsize();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMargindivider();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional Execution Execution = 1;
 * @return {!proto.mt4grpc.Execution}
 */
proto.mt4grpc.SymbolInfo.prototype.getExecution = function() {
  return /** @type {!proto.mt4grpc.Execution} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.mt4grpc.Execution} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setExecution = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 StopsLevel = 2;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getStopslevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setStopslevel = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 Digits = 3;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getDigits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setDigits = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double Point = 4;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getPoint = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setPoint = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double SwapLong = 5;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getSwaplong = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setSwaplong = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double SwapShort = 6;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getSwapshort = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setSwapshort = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 Spread = 7;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getSpread = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setSpread = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 FreezeLevel = 8;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getFreezelevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setFreezelevel = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string MarginCurrency = 9;
 * @return {string}
 */
proto.mt4grpc.SymbolInfo.prototype.getMargincurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setMargincurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional ProfitMode ProfitMode = 10;
 * @return {!proto.mt4grpc.ProfitMode}
 */
proto.mt4grpc.SymbolInfo.prototype.getProfitmode = function() {
  return /** @type {!proto.mt4grpc.ProfitMode} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.mt4grpc.ProfitMode} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setProfitmode = function(value) {
  return jspb.Message.setProto3EnumField(this, 10, value);
};


/**
 * optional MarginMode MarginMode = 11;
 * @return {!proto.mt4grpc.MarginMode}
 */
proto.mt4grpc.SymbolInfo.prototype.getMarginmode = function() {
  return /** @type {!proto.mt4grpc.MarginMode} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {!proto.mt4grpc.MarginMode} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setMarginmode = function(value) {
  return jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional double ContractSize = 12;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getContractsize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setContractsize = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string Currency = 13;
 * @return {string}
 */
proto.mt4grpc.SymbolInfo.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional double MarginDivider = 14;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getMargindivider = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setMargindivider = function(value) {
  return jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional int32 Code = 15;
 * @return {number}
 */
proto.mt4grpc.SymbolInfo.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolInfo} returns this
 */
proto.mt4grpc.SymbolInfo.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.ConGroupSec.repeatedFields_ = [23];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ConGroupSec.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ConGroupSec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ConGroupSec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConGroupSec.toObject = function(includeInstance, msg) {
  var f, obj = {
    minlot: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    maxlot: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    lotstep: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    show: jspb.Message.getFieldWithDefault(msg, 4, 0),
    trade: jspb.Message.getFieldWithDefault(msg, 5, 0),
    execution: jspb.Message.getFieldWithDefault(msg, 6, 0),
    commBase: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    commType: jspb.Message.getFieldWithDefault(msg, 8, 0),
    commLots: jspb.Message.getFieldWithDefault(msg, 9, 0),
    commAgent: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    commAgentType: jspb.Message.getFieldWithDefault(msg, 11, 0),
    spreadDiff: jspb.Message.getFieldWithDefault(msg, 12, 0),
    lotMin: jspb.Message.getFieldWithDefault(msg, 13, 0),
    lotMax: jspb.Message.getFieldWithDefault(msg, 14, 0),
    ieDeviation: jspb.Message.getFieldWithDefault(msg, 15, 0),
    confirmation: jspb.Message.getFieldWithDefault(msg, 16, 0),
    tradeRights: jspb.Message.getFieldWithDefault(msg, 17, 0),
    ieQuickMode: jspb.Message.getFieldWithDefault(msg, 18, 0),
    autocloseoutMode: jspb.Message.getFieldWithDefault(msg, 19, 0),
    commTax: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    commAgentLots: jspb.Message.getFieldWithDefault(msg, 21, 0),
    freemarginMode: jspb.Message.getFieldWithDefault(msg, 22, 0),
    reservedList: (f = jspb.Message.getRepeatedField(msg, 23)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ConGroupSec}
 */
proto.mt4grpc.ConGroupSec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ConGroupSec;
  return proto.mt4grpc.ConGroupSec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ConGroupSec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ConGroupSec}
 */
proto.mt4grpc.ConGroupSec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMinlot(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxlot(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLotstep(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setShow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrade(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExecution(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommBase(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommType(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommLots(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommAgent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommAgentType(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSpreadDiff(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLotMin(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLotMax(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIeDeviation(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfirmation(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTradeRights(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIeQuickMode(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAutocloseoutMode(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCommTax(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCommAgentLots(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFreemarginMode(value);
      break;
    case 23:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addReserved(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ConGroupSec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ConGroupSec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ConGroupSec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ConGroupSec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinlot();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getMaxlot();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLotstep();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getShow();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTrade();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getExecution();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getCommBase();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getCommType();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCommLots();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getCommAgent();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getCommAgentType();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getSpreadDiff();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getLotMin();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getLotMax();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getIeDeviation();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getConfirmation();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getTradeRights();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getIeQuickMode();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getAutocloseoutMode();
  if (f !== 0) {
    writer.writeInt32(
      19,
      f
    );
  }
  f = message.getCommTax();
  if (f !== 0.0) {
    writer.writeDouble(
      20,
      f
    );
  }
  f = message.getCommAgentLots();
  if (f !== 0) {
    writer.writeInt32(
      21,
      f
    );
  }
  f = message.getFreemarginMode();
  if (f !== 0) {
    writer.writeInt32(
      22,
      f
    );
  }
  f = message.getReservedList();
  if (f.length > 0) {
    writer.writePackedInt32(
      23,
      f
    );
  }
};


/**
 * optional double MinLot = 1;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getMinlot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setMinlot = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double MaxLot = 2;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getMaxlot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setMaxlot = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double LotStep = 3;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getLotstep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setLotstep = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 show = 4;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getShow = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setShow = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 trade = 5;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getTrade = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setTrade = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 execution = 6;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getExecution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setExecution = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double comm_base = 7;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommBase = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommBase = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional int32 comm_type = 8;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommType = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 comm_lots = 9;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommLots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommLots = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional double comm_agent = 10;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommAgent = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommAgent = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional int32 comm_agent_type = 11;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommAgentType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommAgentType = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 spread_diff = 12;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getSpreadDiff = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setSpreadDiff = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 lot_min = 13;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getLotMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setLotMin = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 lot_max = 14;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getLotMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setLotMax = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 ie_deviation = 15;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getIeDeviation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setIeDeviation = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 confirmation = 16;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getConfirmation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setConfirmation = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 trade_rights = 17;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getTradeRights = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setTradeRights = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int32 ie_quick_mode = 18;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getIeQuickMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setIeQuickMode = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int32 autocloseout_mode = 19;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getAutocloseoutMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setAutocloseoutMode = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional double comm_tax = 20;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommTax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommTax = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional int32 comm_agent_lots = 21;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getCommAgentLots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setCommAgentLots = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional int32 freemargin_mode = 22;
 * @return {number}
 */
proto.mt4grpc.ConGroupSec.prototype.getFreemarginMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setFreemarginMode = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * repeated int32 reserved = 23;
 * @return {!Array<number>}
 */
proto.mt4grpc.ConGroupSec.prototype.getReservedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 23));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.setReservedList = function(value) {
  return jspb.Message.setField(this, 23, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.addReserved = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 23, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.ConGroupSec} returns this
 */
proto.mt4grpc.ConGroupSec.prototype.clearReservedList = function() {
  return this.setReservedList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolParamsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolParamsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolParamsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.SymbolParams.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolParamsReply}
 */
proto.mt4grpc.SymbolParamsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolParamsReply;
  return proto.mt4grpc.SymbolParamsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolParamsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolParamsReply}
 */
proto.mt4grpc.SymbolParamsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.SymbolParams;
      reader.readMessage(value,proto.mt4grpc.SymbolParams.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolParamsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolParamsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolParamsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.SymbolParams.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional SymbolParams result = 1;
 * @return {?proto.mt4grpc.SymbolParams}
 */
proto.mt4grpc.SymbolParamsReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.SymbolParams} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.SymbolParams, 1));
};


/**
 * @param {?proto.mt4grpc.SymbolParams|undefined} value
 * @return {!proto.mt4grpc.SymbolParamsReply} returns this
*/
proto.mt4grpc.SymbolParamsReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParamsReply} returns this
 */
proto.mt4grpc.SymbolParamsReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParamsReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SymbolParamsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SymbolParamsReply} returns this
*/
proto.mt4grpc.SymbolParamsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParamsReply} returns this
 */
proto.mt4grpc.SymbolParamsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParamsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ServerTimezoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ServerTimezoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ServerTimezoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ServerTimezoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ServerTimezoneRequest}
 */
proto.mt4grpc.ServerTimezoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ServerTimezoneRequest;
  return proto.mt4grpc.ServerTimezoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ServerTimezoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ServerTimezoneRequest}
 */
proto.mt4grpc.ServerTimezoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ServerTimezoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ServerTimezoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ServerTimezoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ServerTimezoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.ServerTimezoneRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ServerTimezoneRequest} returns this
 */
proto.mt4grpc.ServerTimezoneRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ServerTimezoneReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ServerTimezoneReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ServerTimezoneReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ServerTimezoneReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ServerTimezoneReply}
 */
proto.mt4grpc.ServerTimezoneReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ServerTimezoneReply;
  return proto.mt4grpc.ServerTimezoneReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ServerTimezoneReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ServerTimezoneReply}
 */
proto.mt4grpc.ServerTimezoneReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ServerTimezoneReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ServerTimezoneReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ServerTimezoneReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ServerTimezoneReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 result = 1;
 * @return {number}
 */
proto.mt4grpc.ServerTimezoneReply.prototype.getResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ServerTimezoneReply} returns this
 */
proto.mt4grpc.ServerTimezoneReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.ServerTimezoneReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.ServerTimezoneReply} returns this
*/
proto.mt4grpc.ServerTimezoneReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.ServerTimezoneReply} returns this
 */
proto.mt4grpc.ServerTimezoneReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.ServerTimezoneReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.IsInvestorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.IsInvestorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.IsInvestorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.IsInvestorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.IsInvestorRequest}
 */
proto.mt4grpc.IsInvestorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.IsInvestorRequest;
  return proto.mt4grpc.IsInvestorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.IsInvestorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.IsInvestorRequest}
 */
proto.mt4grpc.IsInvestorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.IsInvestorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.IsInvestorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.IsInvestorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.IsInvestorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.IsInvestorRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.IsInvestorRequest} returns this
 */
proto.mt4grpc.IsInvestorRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.IsInvestorReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.IsInvestorReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.IsInvestorReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.IsInvestorReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.IsInvestorReply}
 */
proto.mt4grpc.IsInvestorReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.IsInvestorReply;
  return proto.mt4grpc.IsInvestorReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.IsInvestorReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.IsInvestorReply}
 */
proto.mt4grpc.IsInvestorReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.IsInvestorReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.IsInvestorReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.IsInvestorReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.IsInvestorReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool result = 1;
 * @return {boolean}
 */
proto.mt4grpc.IsInvestorReply.prototype.getResult = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mt4grpc.IsInvestorReply} returns this
 */
proto.mt4grpc.IsInvestorReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.IsInvestorReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.IsInvestorReply} returns this
*/
proto.mt4grpc.IsInvestorReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.IsInvestorReply} returns this
 */
proto.mt4grpc.IsInvestorReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.IsInvestorReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SymbolParamsManyRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolParamsManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolParamsManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbolsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolParamsManyRequest}
 */
proto.mt4grpc.SymbolParamsManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolParamsManyRequest;
  return proto.mt4grpc.SymbolParamsManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolParamsManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolParamsManyRequest}
 */
proto.mt4grpc.SymbolParamsManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSymbols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolParamsManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolParamsManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolParamsManyRequest} returns this
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string symbols = 2;
 * @return {!Array<string>}
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.getSymbolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.SymbolParamsManyRequest} returns this
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.setSymbolsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.SymbolParamsManyRequest} returns this
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.addSymbols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SymbolParamsManyRequest} returns this
 */
proto.mt4grpc.SymbolParamsManyRequest.prototype.clearSymbolsList = function() {
  return this.setSymbolsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SymbolParamsManyReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolParamsManyReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolParamsManyReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsManyReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.SymbolParams.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolParamsManyReply}
 */
proto.mt4grpc.SymbolParamsManyReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolParamsManyReply;
  return proto.mt4grpc.SymbolParamsManyReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolParamsManyReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolParamsManyReply}
 */
proto.mt4grpc.SymbolParamsManyReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.SymbolParams;
      reader.readMessage(value,proto.mt4grpc.SymbolParams.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolParamsManyReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolParamsManyReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolParamsManyReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.SymbolParams.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SymbolParams result = 1;
 * @return {!Array<!proto.mt4grpc.SymbolParams>}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.SymbolParams>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.SymbolParams, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.SymbolParams>} value
 * @return {!proto.mt4grpc.SymbolParamsManyReply} returns this
*/
proto.mt4grpc.SymbolParamsManyReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.SymbolParams=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.SymbolParams}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.SymbolParams, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SymbolParamsManyReply} returns this
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SymbolParamsManyReply} returns this
*/
proto.mt4grpc.SymbolParamsManyReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SymbolParamsManyReply} returns this
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SymbolParamsManyReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OpenedOrderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OpenedOrderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OpenedOrderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticket: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OpenedOrderRequest}
 */
proto.mt4grpc.OpenedOrderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OpenedOrderRequest;
  return proto.mt4grpc.OpenedOrderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OpenedOrderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OpenedOrderRequest}
 */
proto.mt4grpc.OpenedOrderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OpenedOrderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OpenedOrderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OpenedOrderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OpenedOrderRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OpenedOrderRequest} returns this
 */
proto.mt4grpc.OpenedOrderRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticket = 2;
 * @return {number}
 */
proto.mt4grpc.OpenedOrderRequest.prototype.getTicket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OpenedOrderRequest} returns this
 */
proto.mt4grpc.OpenedOrderRequest.prototype.setTicket = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OpenedOrderReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OpenedOrderReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OpenedOrderReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrderReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.Order.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OpenedOrderReply}
 */
proto.mt4grpc.OpenedOrderReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OpenedOrderReply;
  return proto.mt4grpc.OpenedOrderReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OpenedOrderReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OpenedOrderReply}
 */
proto.mt4grpc.OpenedOrderReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OpenedOrderReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OpenedOrderReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OpenedOrderReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OpenedOrderReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order result = 1;
 * @return {?proto.mt4grpc.Order}
 */
proto.mt4grpc.OpenedOrderReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.Order} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {?proto.mt4grpc.Order|undefined} value
 * @return {!proto.mt4grpc.OpenedOrderReply} returns this
*/
proto.mt4grpc.OpenedOrderReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OpenedOrderReply} returns this
 */
proto.mt4grpc.OpenedOrderReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OpenedOrderReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OpenedOrderReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OpenedOrderReply} returns this
*/
proto.mt4grpc.OpenedOrderReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OpenedOrderReply} returns this
 */
proto.mt4grpc.OpenedOrderReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OpenedOrderReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: jspb.Message.getFieldWithDefault(msg, 2, ""),
    to: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderHistoryRequest}
 */
proto.mt4grpc.OrderHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderHistoryRequest;
  return proto.mt4grpc.OrderHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderHistoryRequest}
 */
proto.mt4grpc.OrderHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderHistoryRequest} returns this
 */
proto.mt4grpc.OrderHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from = 2;
 * @return {string}
 */
proto.mt4grpc.OrderHistoryRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderHistoryRequest} returns this
 */
proto.mt4grpc.OrderHistoryRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string to = 3;
 * @return {string}
 */
proto.mt4grpc.OrderHistoryRequest.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderHistoryRequest} returns this
 */
proto.mt4grpc.OrderHistoryRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.OrderHistoryReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderHistoryReply}
 */
proto.mt4grpc.OrderHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderHistoryReply;
  return proto.mt4grpc.OrderHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderHistoryReply}
 */
proto.mt4grpc.OrderHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.OrderHistoryReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.OrderHistoryReply} returns this
*/
proto.mt4grpc.OrderHistoryReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderHistoryReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.OrderHistoryReply} returns this
 */
proto.mt4grpc.OrderHistoryReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderHistoryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderHistoryReply} returns this
*/
proto.mt4grpc.OrderHistoryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderHistoryReply} returns this
 */
proto.mt4grpc.OrderHistoryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderHistoryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timeframe: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, ""),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteHistoryRequest}
 */
proto.mt4grpc.QuoteHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteHistoryRequest;
  return proto.mt4grpc.QuoteHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteHistoryRequest}
 */
proto.mt4grpc.QuoteHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {!proto.mt4grpc.Timeframe} */ (reader.readEnum());
      msg.setTimeframe(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimeframe();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryRequest} returns this
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryRequest} returns this
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Timeframe timeframe = 3;
 * @return {!proto.mt4grpc.Timeframe}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.getTimeframe = function() {
  return /** @type {!proto.mt4grpc.Timeframe} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mt4grpc.Timeframe} value
 * @return {!proto.mt4grpc.QuoteHistoryRequest} returns this
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.setTimeframe = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryRequest} returns this
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteHistoryRequest} returns this
 */
proto.mt4grpc.QuoteHistoryRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.Bar.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.Bar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.Bar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Bar.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    open: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    high: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    low: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    close: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.Bar}
 */
proto.mt4grpc.Bar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.Bar;
  return proto.mt4grpc.Bar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.Bar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.Bar}
 */
proto.mt4grpc.Bar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOpen(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setHigh(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLow(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setClose(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.Bar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.Bar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.Bar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.Bar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOpen();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getHigh();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLow();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getClose();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp Time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.Bar.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.Bar} returns this
*/
proto.mt4grpc.Bar.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.Bar.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double Open = 2;
 * @return {number}
 */
proto.mt4grpc.Bar.prototype.getOpen = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.setOpen = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double High = 3;
 * @return {number}
 */
proto.mt4grpc.Bar.prototype.getHigh = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.setHigh = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double Low = 4;
 * @return {number}
 */
proto.mt4grpc.Bar.prototype.getLow = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.setLow = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double Close = 5;
 * @return {number}
 */
proto.mt4grpc.Bar.prototype.getClose = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.setClose = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double Volume = 6;
 * @return {number}
 */
proto.mt4grpc.Bar.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.Bar} returns this
 */
proto.mt4grpc.Bar.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.QuoteHistoryReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Bar.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteHistoryReply}
 */
proto.mt4grpc.QuoteHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteHistoryReply;
  return proto.mt4grpc.QuoteHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteHistoryReply}
 */
proto.mt4grpc.QuoteHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Bar;
      reader.readMessage(value,proto.mt4grpc.Bar.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Bar.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Bar result = 1;
 * @return {!Array<!proto.mt4grpc.Bar>}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Bar>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Bar, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Bar>} value
 * @return {!proto.mt4grpc.QuoteHistoryReply} returns this
*/
proto.mt4grpc.QuoteHistoryReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Bar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Bar}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Bar, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.QuoteHistoryReply} returns this
 */
proto.mt4grpc.QuoteHistoryReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.QuoteHistoryReply} returns this
*/
proto.mt4grpc.QuoteHistoryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.QuoteHistoryReply} returns this
 */
proto.mt4grpc.QuoteHistoryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.QuoteHistoryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.QuoteHistoryManyRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteHistoryManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteHistoryManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbolList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timeframe: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, ""),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest}
 */
proto.mt4grpc.QuoteHistoryManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteHistoryManyRequest;
  return proto.mt4grpc.QuoteHistoryManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteHistoryManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest}
 */
proto.mt4grpc.QuoteHistoryManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSymbol(value);
      break;
    case 3:
      var value = /** @type {!proto.mt4grpc.Timeframe} */ (reader.readEnum());
      msg.setTimeframe(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteHistoryManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteHistoryManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTimeframe();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string symbol = 2;
 * @return {!Array<string>}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.getSymbolList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.setSymbolList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.addSymbol = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.clearSymbolList = function() {
  return this.setSymbolList([]);
};


/**
 * optional Timeframe timeframe = 3;
 * @return {!proto.mt4grpc.Timeframe}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.getTimeframe = function() {
  return /** @type {!proto.mt4grpc.Timeframe} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mt4grpc.Timeframe} value
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.setTimeframe = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.QuoteHistoryManyRequest} returns this
 */
proto.mt4grpc.QuoteHistoryManyRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.BarsForSymbol.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.BarsForSymbol.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.BarsForSymbol.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.BarsForSymbol} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BarsForSymbol.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    barsList: jspb.Message.toObjectList(msg.getBarsList(),
    proto.mt4grpc.Bar.toObject, includeInstance),
    exception: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.BarsForSymbol}
 */
proto.mt4grpc.BarsForSymbol.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.BarsForSymbol;
  return proto.mt4grpc.BarsForSymbol.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.BarsForSymbol} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.BarsForSymbol}
 */
proto.mt4grpc.BarsForSymbol.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Bar;
      reader.readMessage(value,proto.mt4grpc.Bar.deserializeBinaryFromReader);
      msg.addBars(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setException(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.BarsForSymbol.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.BarsForSymbol.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.BarsForSymbol} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BarsForSymbol.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBarsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mt4grpc.Bar.serializeBinaryToWriter
    );
  }
  f = message.getException();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string Symbol = 1;
 * @return {string}
 */
proto.mt4grpc.BarsForSymbol.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.BarsForSymbol} returns this
 */
proto.mt4grpc.BarsForSymbol.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Bar Bars = 2;
 * @return {!Array<!proto.mt4grpc.Bar>}
 */
proto.mt4grpc.BarsForSymbol.prototype.getBarsList = function() {
  return /** @type{!Array<!proto.mt4grpc.Bar>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Bar, 2));
};


/**
 * @param {!Array<!proto.mt4grpc.Bar>} value
 * @return {!proto.mt4grpc.BarsForSymbol} returns this
*/
proto.mt4grpc.BarsForSymbol.prototype.setBarsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mt4grpc.Bar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Bar}
 */
proto.mt4grpc.BarsForSymbol.prototype.addBars = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mt4grpc.Bar, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.BarsForSymbol} returns this
 */
proto.mt4grpc.BarsForSymbol.prototype.clearBarsList = function() {
  return this.setBarsList([]);
};


/**
 * optional string Exception = 3;
 * @return {string}
 */
proto.mt4grpc.BarsForSymbol.prototype.getException = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.BarsForSymbol} returns this
 */
proto.mt4grpc.BarsForSymbol.prototype.setException = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.QuoteHistoryManyReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteHistoryManyReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteHistoryManyReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryManyReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.BarsForSymbol.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteHistoryManyReply}
 */
proto.mt4grpc.QuoteHistoryManyReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteHistoryManyReply;
  return proto.mt4grpc.QuoteHistoryManyReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteHistoryManyReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteHistoryManyReply}
 */
proto.mt4grpc.QuoteHistoryManyReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.BarsForSymbol;
      reader.readMessage(value,proto.mt4grpc.BarsForSymbol.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteHistoryManyReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteHistoryManyReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryManyReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.BarsForSymbol.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BarsForSymbol result = 1;
 * @return {!Array<!proto.mt4grpc.BarsForSymbol>}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.BarsForSymbol>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.BarsForSymbol, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.BarsForSymbol>} value
 * @return {!proto.mt4grpc.QuoteHistoryManyReply} returns this
*/
proto.mt4grpc.QuoteHistoryManyReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.BarsForSymbol=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.BarsForSymbol}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.BarsForSymbol, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.QuoteHistoryManyReply} returns this
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.QuoteHistoryManyReply} returns this
*/
proto.mt4grpc.QuoteHistoryManyReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.QuoteHistoryManyReply} returns this
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.QuoteHistoryManyReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ClosedOrdersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ClosedOrdersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ClosedOrdersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClosedOrdersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ClosedOrdersRequest}
 */
proto.mt4grpc.ClosedOrdersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ClosedOrdersRequest;
  return proto.mt4grpc.ClosedOrdersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ClosedOrdersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ClosedOrdersRequest}
 */
proto.mt4grpc.ClosedOrdersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ClosedOrdersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ClosedOrdersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ClosedOrdersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClosedOrdersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.ClosedOrdersRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ClosedOrdersRequest} returns this
 */
proto.mt4grpc.ClosedOrdersRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.ClosedOrdersReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ClosedOrdersReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ClosedOrdersReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClosedOrdersReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ClosedOrdersReply}
 */
proto.mt4grpc.ClosedOrdersReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ClosedOrdersReply;
  return proto.mt4grpc.ClosedOrdersReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ClosedOrdersReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ClosedOrdersReply}
 */
proto.mt4grpc.ClosedOrdersReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ClosedOrdersReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ClosedOrdersReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClosedOrdersReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.ClosedOrdersReply} returns this
*/
proto.mt4grpc.ClosedOrdersReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.ClosedOrdersReply} returns this
 */
proto.mt4grpc.ClosedOrdersReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.ClosedOrdersReply} returns this
*/
proto.mt4grpc.ClosedOrdersReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.ClosedOrdersReply} returns this
 */
proto.mt4grpc.ClosedOrdersReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.ClosedOrdersReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.RequestQuoteHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.RequestQuoteHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.RequestQuoteHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timeframe: jspb.Message.getFieldWithDefault(msg, 3, 0),
    from: jspb.Message.getFieldWithDefault(msg, 4, ""),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.RequestQuoteHistoryRequest;
  return proto.mt4grpc.RequestQuoteHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.RequestQuoteHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {!proto.mt4grpc.Timeframe} */ (reader.readEnum());
      msg.setTimeframe(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.RequestQuoteHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.RequestQuoteHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.RequestQuoteHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimeframe();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest} returns this
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest} returns this
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Timeframe timeframe = 3;
 * @return {!proto.mt4grpc.Timeframe}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.getTimeframe = function() {
  return /** @type {!proto.mt4grpc.Timeframe} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mt4grpc.Timeframe} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest} returns this
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.setTimeframe = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest} returns this
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 count = 5;
 * @return {number}
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryRequest} returns this
 */
proto.mt4grpc.RequestQuoteHistoryRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.RequestQuoteHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.RequestQuoteHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.RequestQuoteHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.RequestQuoteHistoryReply}
 */
proto.mt4grpc.RequestQuoteHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.RequestQuoteHistoryReply;
  return proto.mt4grpc.RequestQuoteHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.RequestQuoteHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.RequestQuoteHistoryReply}
 */
proto.mt4grpc.RequestQuoteHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.RequestQuoteHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.RequestQuoteHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.RequestQuoteHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryReply} returns this
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.RequestQuoteHistoryReply} returns this
*/
proto.mt4grpc.RequestQuoteHistoryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.RequestQuoteHistoryReply} returns this
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.RequestQuoteHistoryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SetPlacedTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SetPlacedTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SetPlacedTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SetPlacedTypeRequest}
 */
proto.mt4grpc.SetPlacedTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SetPlacedTypeRequest;
  return proto.mt4grpc.SetPlacedTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SetPlacedTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SetPlacedTypeRequest}
 */
proto.mt4grpc.SetPlacedTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.mt4grpc.PlacedType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SetPlacedTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SetPlacedTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SetPlacedTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SetPlacedTypeRequest} returns this
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PlacedType type = 2;
 * @return {!proto.mt4grpc.PlacedType}
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.getType = function() {
  return /** @type {!proto.mt4grpc.PlacedType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mt4grpc.PlacedType} value
 * @return {!proto.mt4grpc.SetPlacedTypeRequest} returns this
 */
proto.mt4grpc.SetPlacedTypeRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SetPlacedTypeReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SetPlacedTypeReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SetPlacedTypeReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SetPlacedTypeReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SetPlacedTypeReply}
 */
proto.mt4grpc.SetPlacedTypeReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SetPlacedTypeReply;
  return proto.mt4grpc.SetPlacedTypeReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SetPlacedTypeReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SetPlacedTypeReply}
 */
proto.mt4grpc.SetPlacedTypeReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SetPlacedTypeReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SetPlacedTypeReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SetPlacedTypeReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.SetPlacedTypeReply} returns this
*/
proto.mt4grpc.SetPlacedTypeReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SetPlacedTypeReply} returns this
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SetPlacedTypeReply} returns this
*/
proto.mt4grpc.SetPlacedTypeReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SetPlacedTypeReply} returns this
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SetPlacedTypeReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.PingRequest}
 */
proto.mt4grpc.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.PingRequest;
  return proto.mt4grpc.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.PingRequest}
 */
proto.mt4grpc.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.PingReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.PingReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.PingReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.PingReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.PingReply}
 */
proto.mt4grpc.PingReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.PingReply;
  return proto.mt4grpc.PingReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.PingReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.PingReply}
 */
proto.mt4grpc.PingReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.PingReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.PingReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.PingReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.PingReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.PingReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.PingReply} returns this
 */
proto.mt4grpc.PingReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.PingReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.PingReply} returns this
*/
proto.mt4grpc.PingReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.PingReply} returns this
 */
proto.mt4grpc.PingReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.PingReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetLogsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetLogsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetLogsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetLogsRequest}
 */
proto.mt4grpc.GetLogsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetLogsRequest;
  return proto.mt4grpc.GetLogsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetLogsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetLogsRequest}
 */
proto.mt4grpc.GetLogsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetLogsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetLogsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetLogsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.GetLogsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.GetLogsRequest} returns this
 */
proto.mt4grpc.GetLogsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.LogRec.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.LogRec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.LogRec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.LogRec.toObject = function(includeInstance, msg) {
  var f, obj = {
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    level: jspb.Message.getFieldWithDefault(msg, 2, 0),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, ""),
    user: jspb.Message.getFieldWithDefault(msg, 5, 0),
    password: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.LogRec}
 */
proto.mt4grpc.LogRec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.LogRec;
  return proto.mt4grpc.LogRec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.LogRec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.LogRec}
 */
proto.mt4grpc.LogRec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 2:
      var value = /** @type {!proto.mt4grpc.LogEventLevel} */ (reader.readEnum());
      msg.setLevel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.LogRec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.LogRec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.LogRec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.LogRec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp Time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.mt4grpc.LogRec.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.mt4grpc.LogRec} returns this
*/
proto.mt4grpc.LogRec.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.LogRec.prototype.hasTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional LogEventLevel Level = 2;
 * @return {!proto.mt4grpc.LogEventLevel}
 */
proto.mt4grpc.LogRec.prototype.getLevel = function() {
  return /** @type {!proto.mt4grpc.LogEventLevel} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mt4grpc.LogEventLevel} value
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.setLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string Message = 3;
 * @return {string}
 */
proto.mt4grpc.LogRec.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Id = 4;
 * @return {string}
 */
proto.mt4grpc.LogRec.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 User = 5;
 * @return {number}
 */
proto.mt4grpc.LogRec.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string Password = 6;
 * @return {string}
 */
proto.mt4grpc.LogRec.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.LogRec} returns this
 */
proto.mt4grpc.LogRec.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.GetLogsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetLogsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetLogsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetLogsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.LogRec.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetLogsReply}
 */
proto.mt4grpc.GetLogsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetLogsReply;
  return proto.mt4grpc.GetLogsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetLogsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetLogsReply}
 */
proto.mt4grpc.GetLogsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.LogRec;
      reader.readMessage(value,proto.mt4grpc.LogRec.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetLogsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetLogsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetLogsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.LogRec.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LogRec result = 1;
 * @return {!Array<!proto.mt4grpc.LogRec>}
 */
proto.mt4grpc.GetLogsReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.LogRec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.LogRec, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.LogRec>} value
 * @return {!proto.mt4grpc.GetLogsReply} returns this
*/
proto.mt4grpc.GetLogsReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.LogRec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.LogRec}
 */
proto.mt4grpc.GetLogsReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.LogRec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.GetLogsReply} returns this
 */
proto.mt4grpc.GetLogsReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.GetLogsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.GetLogsReply} returns this
*/
proto.mt4grpc.GetLogsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.GetLogsReply} returns this
 */
proto.mt4grpc.GetLogsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.GetLogsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetLogsByUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetLogsByUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsByUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: jspb.Message.getFieldWithDefault(msg, 1, 0),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetLogsByUserRequest}
 */
proto.mt4grpc.GetLogsByUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetLogsByUserRequest;
  return proto.mt4grpc.GetLogsByUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetLogsByUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetLogsByUserRequest}
 */
proto.mt4grpc.GetLogsByUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetLogsByUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetLogsByUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsByUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 user = 1;
 * @return {number}
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.GetLogsByUserRequest} returns this
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.GetLogsByUserRequest} returns this
 */
proto.mt4grpc.GetLogsByUserRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.GetLogsByUserReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetLogsByUserReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetLogsByUserReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsByUserReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.LogRec.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetLogsByUserReply}
 */
proto.mt4grpc.GetLogsByUserReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetLogsByUserReply;
  return proto.mt4grpc.GetLogsByUserReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetLogsByUserReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetLogsByUserReply}
 */
proto.mt4grpc.GetLogsByUserReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.LogRec;
      reader.readMessage(value,proto.mt4grpc.LogRec.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetLogsByUserReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetLogsByUserReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetLogsByUserReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.LogRec.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LogRec result = 1;
 * @return {!Array<!proto.mt4grpc.LogRec>}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.LogRec>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.LogRec, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.LogRec>} value
 * @return {!proto.mt4grpc.GetLogsByUserReply} returns this
*/
proto.mt4grpc.GetLogsByUserReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.LogRec=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.LogRec}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.LogRec, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.GetLogsByUserReply} returns this
 */
proto.mt4grpc.GetLogsByUserReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.GetLogsByUserReply} returns this
*/
proto.mt4grpc.GetLogsByUserReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.GetLogsByUserReply} returns this
 */
proto.mt4grpc.GetLogsByUserReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.GetLogsByUserReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.MemorySnapshotRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.MemorySnapshotRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.MemorySnapshotRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemorySnapshotRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.MemorySnapshotRequest}
 */
proto.mt4grpc.MemorySnapshotRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.MemorySnapshotRequest;
  return proto.mt4grpc.MemorySnapshotRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.MemorySnapshotRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.MemorySnapshotRequest}
 */
proto.mt4grpc.MemorySnapshotRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.MemorySnapshotRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.MemorySnapshotRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.MemorySnapshotRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemorySnapshotRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.MemorySnapshotReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.MemorySnapshotReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.MemorySnapshotReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemorySnapshotReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.MemorySnapshotReply}
 */
proto.mt4grpc.MemorySnapshotReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.MemorySnapshotReply;
  return proto.mt4grpc.MemorySnapshotReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.MemorySnapshotReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.MemorySnapshotReply}
 */
proto.mt4grpc.MemorySnapshotReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.MemorySnapshotReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.MemorySnapshotReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.MemorySnapshotReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemorySnapshotReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.MemorySnapshotReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.MemorySnapshotReply} returns this
 */
proto.mt4grpc.MemorySnapshotReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.MemorySnapshotReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.MemorySnapshotReply} returns this
*/
proto.mt4grpc.MemorySnapshotReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.MemorySnapshotReply} returns this
 */
proto.mt4grpc.MemorySnapshotReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.MemorySnapshotReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    company: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SearchRequest}
 */
proto.mt4grpc.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SearchRequest;
  return proto.mt4grpc.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SearchRequest}
 */
proto.mt4grpc.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompany(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompany();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string company = 1;
 * @return {string}
 */
proto.mt4grpc.SearchRequest.prototype.getCompany = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SearchRequest} returns this
 */
proto.mt4grpc.SearchRequest.prototype.setCompany = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.BrokerSerachResult.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.BrokerSerachResult.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.BrokerSerachResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.BrokerSerachResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerSerachResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.BrokerCompany.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.BrokerSerachResult}
 */
proto.mt4grpc.BrokerSerachResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.BrokerSerachResult;
  return proto.mt4grpc.BrokerSerachResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.BrokerSerachResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.BrokerSerachResult}
 */
proto.mt4grpc.BrokerSerachResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.BrokerCompany;
      reader.readMessage(value,proto.mt4grpc.BrokerCompany.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.BrokerSerachResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.BrokerSerachResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.BrokerSerachResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerSerachResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.BrokerCompany.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BrokerCompany Result = 1;
 * @return {!Array<!proto.mt4grpc.BrokerCompany>}
 */
proto.mt4grpc.BrokerSerachResult.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.BrokerCompany>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.BrokerCompany, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.BrokerCompany>} value
 * @return {!proto.mt4grpc.BrokerSerachResult} returns this
*/
proto.mt4grpc.BrokerSerachResult.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.BrokerCompany=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.BrokerCompany}
 */
proto.mt4grpc.BrokerSerachResult.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.BrokerCompany, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.BrokerSerachResult} returns this
 */
proto.mt4grpc.BrokerSerachResult.prototype.clearResultList = function() {
  return this.setResultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.BrokerCompany.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.BrokerCompany.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.BrokerCompany.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.BrokerCompany} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerCompany.toObject = function(includeInstance, msg) {
  var f, obj = {
    company: jspb.Message.getFieldWithDefault(msg, 1, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.mt4grpc.BrokerServer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.BrokerCompany}
 */
proto.mt4grpc.BrokerCompany.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.BrokerCompany;
  return proto.mt4grpc.BrokerCompany.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.BrokerCompany} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.BrokerCompany}
 */
proto.mt4grpc.BrokerCompany.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompany(value);
      break;
    case 2:
      var value = new proto.mt4grpc.BrokerServer;
      reader.readMessage(value,proto.mt4grpc.BrokerServer.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.BrokerCompany.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.BrokerCompany.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.BrokerCompany} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerCompany.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompany();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mt4grpc.BrokerServer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Company = 1;
 * @return {string}
 */
proto.mt4grpc.BrokerCompany.prototype.getCompany = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.BrokerCompany} returns this
 */
proto.mt4grpc.BrokerCompany.prototype.setCompany = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated BrokerServer Results = 2;
 * @return {!Array<!proto.mt4grpc.BrokerServer>}
 */
proto.mt4grpc.BrokerCompany.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.mt4grpc.BrokerServer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.BrokerServer, 2));
};


/**
 * @param {!Array<!proto.mt4grpc.BrokerServer>} value
 * @return {!proto.mt4grpc.BrokerCompany} returns this
*/
proto.mt4grpc.BrokerCompany.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mt4grpc.BrokerServer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.BrokerServer}
 */
proto.mt4grpc.BrokerCompany.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mt4grpc.BrokerServer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.BrokerCompany} returns this
 */
proto.mt4grpc.BrokerCompany.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.BrokerServer.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.BrokerServer.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.BrokerServer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.BrokerServer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerServer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    accessList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    isDemo: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.BrokerServer}
 */
proto.mt4grpc.BrokerServer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.BrokerServer;
  return proto.mt4grpc.BrokerServer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.BrokerServer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.BrokerServer}
 */
proto.mt4grpc.BrokerServer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIsDemo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.BrokerServer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.BrokerServer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.BrokerServer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.BrokerServer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccessList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getIsDemo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string Name = 1;
 * @return {string}
 */
proto.mt4grpc.BrokerServer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.BrokerServer} returns this
 */
proto.mt4grpc.BrokerServer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string Access = 2;
 * @return {!Array<string>}
 */
proto.mt4grpc.BrokerServer.prototype.getAccessList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.BrokerServer} returns this
 */
proto.mt4grpc.BrokerServer.prototype.setAccessList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.BrokerServer} returns this
 */
proto.mt4grpc.BrokerServer.prototype.addAccess = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.BrokerServer} returns this
 */
proto.mt4grpc.BrokerServer.prototype.clearAccessList = function() {
  return this.setAccessList([]);
};


/**
 * optional string Is_demo = 3;
 * @return {string}
 */
proto.mt4grpc.BrokerServer.prototype.getIsDemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.BrokerServer} returns this
 */
proto.mt4grpc.BrokerServer.prototype.setIsDemo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SearchReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SearchReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SearchReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SearchReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.BrokerSerachResult.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SearchReply}
 */
proto.mt4grpc.SearchReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SearchReply;
  return proto.mt4grpc.SearchReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SearchReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SearchReply}
 */
proto.mt4grpc.SearchReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.BrokerSerachResult;
      reader.readMessage(value,proto.mt4grpc.BrokerSerachResult.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SearchReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SearchReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SearchReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SearchReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.BrokerSerachResult.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional BrokerSerachResult result = 1;
 * @return {?proto.mt4grpc.BrokerSerachResult}
 */
proto.mt4grpc.SearchReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.BrokerSerachResult} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.BrokerSerachResult, 1));
};


/**
 * @param {?proto.mt4grpc.BrokerSerachResult|undefined} value
 * @return {!proto.mt4grpc.SearchReply} returns this
*/
proto.mt4grpc.SearchReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SearchReply} returns this
 */
proto.mt4grpc.SearchReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SearchReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SearchReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SearchReply} returns this
*/
proto.mt4grpc.SearchReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SearchReply} returns this
 */
proto.mt4grpc.SearchReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SearchReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetClientsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetClientsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetClientsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetClientsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetClientsRequest}
 */
proto.mt4grpc.GetClientsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetClientsRequest;
  return proto.mt4grpc.GetClientsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetClientsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetClientsRequest}
 */
proto.mt4grpc.GetClientsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetClientsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetClientsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetClientsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetClientsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ClientStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ClientStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ClientStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClientStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connected: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    user: jspb.Message.getFieldWithDefault(msg, 3, 0),
    host: jspb.Message.getFieldWithDefault(msg, 4, ""),
    port: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ClientStatus}
 */
proto.mt4grpc.ClientStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ClientStatus;
  return proto.mt4grpc.ClientStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ClientStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ClientStatus}
 */
proto.mt4grpc.ClientStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConnected(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ClientStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ClientStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ClientStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ClientStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnected();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getUser();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string Id = 1;
 * @return {string}
 */
proto.mt4grpc.ClientStatus.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ClientStatus} returns this
 */
proto.mt4grpc.ClientStatus.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool Connected = 2;
 * @return {boolean}
 */
proto.mt4grpc.ClientStatus.prototype.getConnected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mt4grpc.ClientStatus} returns this
 */
proto.mt4grpc.ClientStatus.prototype.setConnected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional int32 User = 3;
 * @return {number}
 */
proto.mt4grpc.ClientStatus.prototype.getUser = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ClientStatus} returns this
 */
proto.mt4grpc.ClientStatus.prototype.setUser = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Host = 4;
 * @return {string}
 */
proto.mt4grpc.ClientStatus.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.ClientStatus} returns this
 */
proto.mt4grpc.ClientStatus.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 Port = 5;
 * @return {number}
 */
proto.mt4grpc.ClientStatus.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ClientStatus} returns this
 */
proto.mt4grpc.ClientStatus.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.GetClientsReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.GetClientsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.GetClientsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.GetClientsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetClientsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.ClientStatus.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.GetClientsReply}
 */
proto.mt4grpc.GetClientsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.GetClientsReply;
  return proto.mt4grpc.GetClientsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.GetClientsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.GetClientsReply}
 */
proto.mt4grpc.GetClientsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.ClientStatus;
      reader.readMessage(value,proto.mt4grpc.ClientStatus.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.GetClientsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.GetClientsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.GetClientsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.GetClientsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.ClientStatus.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ClientStatus result = 1;
 * @return {!Array<!proto.mt4grpc.ClientStatus>}
 */
proto.mt4grpc.GetClientsReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.ClientStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.ClientStatus, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.ClientStatus>} value
 * @return {!proto.mt4grpc.GetClientsReply} returns this
*/
proto.mt4grpc.GetClientsReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.ClientStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.ClientStatus}
 */
proto.mt4grpc.GetClientsReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.ClientStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.GetClientsReply} returns this
 */
proto.mt4grpc.GetClientsReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.GetClientsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.GetClientsReply} returns this
*/
proto.mt4grpc.GetClientsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.GetClientsReply} returns this
 */
proto.mt4grpc.GetClientsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.GetClientsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.MemoryUsageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.MemoryUsageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.MemoryUsageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemoryUsageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.MemoryUsageRequest}
 */
proto.mt4grpc.MemoryUsageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.MemoryUsageRequest;
  return proto.mt4grpc.MemoryUsageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.MemoryUsageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.MemoryUsageRequest}
 */
proto.mt4grpc.MemoryUsageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.MemoryUsageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.MemoryUsageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.MemoryUsageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemoryUsageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.MemUsage.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.MemUsage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.MemUsage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemUsage.toObject = function(includeInstance, msg) {
  var f, obj = {
    is64bitprocess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    physicalmemoryusage: jspb.Message.getFieldWithDefault(msg, 2, 0),
    basepriority: jspb.Message.getFieldWithDefault(msg, 3, 0),
    priorityclass: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userprocessortime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    privilegedprocessortime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    totalprocessortime: jspb.Message.getFieldWithDefault(msg, 7, ""),
    pagedsystemmemorysize: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pagedmemorysize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    peakpagedmem: jspb.Message.getFieldWithDefault(msg, 10, 0),
    peakvirtualmem: jspb.Message.getFieldWithDefault(msg, 11, 0),
    peakworkingset: jspb.Message.getFieldWithDefault(msg, 12, 0),
    memoryloadbytes: jspb.Message.getFieldWithDefault(msg, 13, 0),
    heapsizebytes: jspb.Message.getFieldWithDefault(msg, 14, 0),
    fragmentedbytes: jspb.Message.getFieldWithDefault(msg, 15, 0),
    highmemoryloadthresholdbytes: jspb.Message.getFieldWithDefault(msg, 16, 0),
    totalavailablememorybytes: jspb.Message.getFieldWithDefault(msg, 17, 0),
    responding: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.MemUsage}
 */
proto.mt4grpc.MemUsage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.MemUsage;
  return proto.mt4grpc.MemUsage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.MemUsage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.MemUsage}
 */
proto.mt4grpc.MemUsage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIs64bitprocess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhysicalmemoryusage(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBasepriority(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorityclass(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserprocessortime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivilegedprocessortime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalprocessortime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagedsystemmemorysize(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagedmemorysize(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeakpagedmem(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeakvirtualmem(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPeakworkingset(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemoryloadbytes(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeapsizebytes(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFragmentedbytes(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHighmemoryloadthresholdbytes(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalavailablememorybytes(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResponding(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.MemUsage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.MemUsage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.MemUsage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemUsage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIs64bitprocess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getPhysicalmemoryusage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBasepriority();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPriorityclass();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserprocessortime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrivilegedprocessortime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTotalprocessortime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPagedsystemmemorysize();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPagedmemorysize();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPeakpagedmem();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPeakvirtualmem();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getPeakworkingset();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getMemoryloadbytes();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getHeapsizebytes();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getFragmentedbytes();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = message.getHighmemoryloadthresholdbytes();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getTotalavailablememorybytes();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
  f = message.getResponding();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional bool Is64BitProcess = 1;
 * @return {boolean}
 */
proto.mt4grpc.MemUsage.prototype.getIs64bitprocess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setIs64bitprocess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 PhysicalMemoryUsage = 2;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPhysicalmemoryusage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPhysicalmemoryusage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 BasePriority = 3;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getBasepriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setBasepriority = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string PriorityClass = 4;
 * @return {string}
 */
proto.mt4grpc.MemUsage.prototype.getPriorityclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPriorityclass = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string UserProcessorTime = 5;
 * @return {string}
 */
proto.mt4grpc.MemUsage.prototype.getUserprocessortime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setUserprocessortime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string PrivilegedProcessorTime = 6;
 * @return {string}
 */
proto.mt4grpc.MemUsage.prototype.getPrivilegedprocessortime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPrivilegedprocessortime = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string TotalProcessorTime = 7;
 * @return {string}
 */
proto.mt4grpc.MemUsage.prototype.getTotalprocessortime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setTotalprocessortime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 PagedSystemMemorySize = 8;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPagedsystemmemorysize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPagedsystemmemorysize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 PagedMemorySize = 9;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPagedmemorysize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPagedmemorysize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 PeakPagedMem = 10;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPeakpagedmem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPeakpagedmem = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 PeakVirtualMem = 11;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPeakvirtualmem = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPeakvirtualmem = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 PeakWorkingSet = 12;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getPeakworkingset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setPeakworkingset = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 MemoryLoadBytes = 13;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getMemoryloadbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setMemoryloadbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int32 HeapSizeBytes = 14;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getHeapsizebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setHeapsizebytes = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 FragmentedBytes = 15;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getFragmentedbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setFragmentedbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int32 HighMemoryLoadThresholdBytes = 16;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getHighmemoryloadthresholdbytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setHighmemoryloadthresholdbytes = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional int32 TotalAvailableMemoryBytes = 17;
 * @return {number}
 */
proto.mt4grpc.MemUsage.prototype.getTotalavailablememorybytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setTotalavailablememorybytes = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional bool Responding = 18;
 * @return {boolean}
 */
proto.mt4grpc.MemUsage.prototype.getResponding = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mt4grpc.MemUsage} returns this
 */
proto.mt4grpc.MemUsage.prototype.setResponding = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.MemoryUsageReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.MemoryUsageReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.MemoryUsageReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemoryUsageReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.MemUsage.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.MemoryUsageReply}
 */
proto.mt4grpc.MemoryUsageReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.MemoryUsageReply;
  return proto.mt4grpc.MemoryUsageReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.MemoryUsageReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.MemoryUsageReply}
 */
proto.mt4grpc.MemoryUsageReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.MemUsage;
      reader.readMessage(value,proto.mt4grpc.MemUsage.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.MemoryUsageReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.MemoryUsageReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.MemoryUsageReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.MemoryUsageReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.MemUsage.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional MemUsage result = 1;
 * @return {?proto.mt4grpc.MemUsage}
 */
proto.mt4grpc.MemoryUsageReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.MemUsage} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.MemUsage, 1));
};


/**
 * @param {?proto.mt4grpc.MemUsage|undefined} value
 * @return {!proto.mt4grpc.MemoryUsageReply} returns this
*/
proto.mt4grpc.MemoryUsageReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.MemoryUsageReply} returns this
 */
proto.mt4grpc.MemoryUsageReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.MemoryUsageReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.MemoryUsageReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.MemoryUsageReply} returns this
*/
proto.mt4grpc.MemoryUsageReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.MemoryUsageReply} returns this
 */
proto.mt4grpc.MemoryUsageReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.MemoryUsageReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    interval: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeRequest}
 */
proto.mt4grpc.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeRequest;
  return proto.mt4grpc.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeRequest}
 */
proto.mt4grpc.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeRequest} returns this
 */
proto.mt4grpc.SubscribeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.SubscribeRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeRequest} returns this
 */
proto.mt4grpc.SubscribeRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 interval = 3;
 * @return {number}
 */
proto.mt4grpc.SubscribeRequest.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SubscribeRequest} returns this
 */
proto.mt4grpc.SubscribeRequest.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeReply}
 */
proto.mt4grpc.SubscribeReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeReply;
  return proto.mt4grpc.SubscribeReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeReply}
 */
proto.mt4grpc.SubscribeReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeReply} returns this
 */
proto.mt4grpc.SubscribeReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeReply} returns this
*/
proto.mt4grpc.SubscribeReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeReply} returns this
 */
proto.mt4grpc.SubscribeReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SubscribeManyRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbolsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    interval: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeManyRequest}
 */
proto.mt4grpc.SubscribeManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeManyRequest;
  return proto.mt4grpc.SubscribeManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeManyRequest}
 */
proto.mt4grpc.SubscribeManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSymbols(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeManyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeManyRequest} returns this
 */
proto.mt4grpc.SubscribeManyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string symbols = 2;
 * @return {!Array<string>}
 */
proto.mt4grpc.SubscribeManyRequest.prototype.getSymbolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.SubscribeManyRequest} returns this
 */
proto.mt4grpc.SubscribeManyRequest.prototype.setSymbolsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.SubscribeManyRequest} returns this
 */
proto.mt4grpc.SubscribeManyRequest.prototype.addSymbols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SubscribeManyRequest} returns this
 */
proto.mt4grpc.SubscribeManyRequest.prototype.clearSymbolsList = function() {
  return this.setSymbolsList([]);
};


/**
 * optional int32 interval = 3;
 * @return {number}
 */
proto.mt4grpc.SubscribeManyRequest.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SubscribeManyRequest} returns this
 */
proto.mt4grpc.SubscribeManyRequest.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeManyReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeManyReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeManyReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeManyReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeManyReply}
 */
proto.mt4grpc.SubscribeManyReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeManyReply;
  return proto.mt4grpc.SubscribeManyReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeManyReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeManyReply}
 */
proto.mt4grpc.SubscribeManyReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeManyReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeManyReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeManyReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeManyReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeManyReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeManyReply} returns this
 */
proto.mt4grpc.SubscribeManyReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeManyReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeManyReply} returns this
*/
proto.mt4grpc.SubscribeManyReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeManyReply} returns this
 */
proto.mt4grpc.SubscribeManyReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeManyReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.UnSubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.UnSubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.UnSubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.UnSubscribeRequest}
 */
proto.mt4grpc.UnSubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.UnSubscribeRequest;
  return proto.mt4grpc.UnSubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.UnSubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.UnSubscribeRequest}
 */
proto.mt4grpc.UnSubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.UnSubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.UnSubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.UnSubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.UnSubscribeRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.UnSubscribeRequest} returns this
 */
proto.mt4grpc.UnSubscribeRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.UnSubscribeRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.UnSubscribeRequest} returns this
 */
proto.mt4grpc.UnSubscribeRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.UnSubscribeReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.UnSubscribeReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.UnSubscribeReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.UnSubscribeReply}
 */
proto.mt4grpc.UnSubscribeReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.UnSubscribeReply;
  return proto.mt4grpc.UnSubscribeReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.UnSubscribeReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.UnSubscribeReply}
 */
proto.mt4grpc.UnSubscribeReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.UnSubscribeReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.UnSubscribeReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.UnSubscribeReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.UnSubscribeReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.UnSubscribeReply} returns this
 */
proto.mt4grpc.UnSubscribeReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.UnSubscribeReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.UnSubscribeReply} returns this
*/
proto.mt4grpc.UnSubscribeReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.UnSubscribeReply} returns this
 */
proto.mt4grpc.UnSubscribeReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.UnSubscribeReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.UnSubscribeManyRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.UnSubscribeManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.UnSubscribeManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbolsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.UnSubscribeManyRequest}
 */
proto.mt4grpc.UnSubscribeManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.UnSubscribeManyRequest;
  return proto.mt4grpc.UnSubscribeManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.UnSubscribeManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.UnSubscribeManyRequest}
 */
proto.mt4grpc.UnSubscribeManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addSymbols(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.UnSubscribeManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.UnSubscribeManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbolsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.UnSubscribeManyRequest} returns this
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string symbols = 2;
 * @return {!Array<string>}
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.getSymbolsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.mt4grpc.UnSubscribeManyRequest} returns this
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.setSymbolsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.UnSubscribeManyRequest} returns this
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.addSymbols = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.UnSubscribeManyRequest} returns this
 */
proto.mt4grpc.UnSubscribeManyRequest.prototype.clearSymbolsList = function() {
  return this.setSymbolsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.UnSubscribeManyReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.UnSubscribeManyReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeManyReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.UnSubscribeManyReply}
 */
proto.mt4grpc.UnSubscribeManyReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.UnSubscribeManyReply;
  return proto.mt4grpc.UnSubscribeManyReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.UnSubscribeManyReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.UnSubscribeManyReply}
 */
proto.mt4grpc.UnSubscribeManyReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.UnSubscribeManyReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.UnSubscribeManyReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.UnSubscribeManyReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.UnSubscribeManyReply} returns this
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.UnSubscribeManyReply} returns this
*/
proto.mt4grpc.UnSubscribeManyReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.UnSubscribeManyReply} returns this
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.UnSubscribeManyReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeOrderProfitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeOrderProfitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeOrderProfitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderProfitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeOrderProfitRequest}
 */
proto.mt4grpc.SubscribeOrderProfitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeOrderProfitRequest;
  return proto.mt4grpc.SubscribeOrderProfitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeOrderProfitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeOrderProfitRequest}
 */
proto.mt4grpc.SubscribeOrderProfitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeOrderProfitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeOrderProfitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeOrderProfitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderProfitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeOrderProfitRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeOrderProfitRequest} returns this
 */
proto.mt4grpc.SubscribeOrderProfitRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SubscribeOrderProfitReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeOrderProfitReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeOrderProfitReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderProfitReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply}
 */
proto.mt4grpc.SubscribeOrderProfitReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeOrderProfitReply;
  return proto.mt4grpc.SubscribeOrderProfitReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeOrderProfitReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply}
 */
proto.mt4grpc.SubscribeOrderProfitReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeOrderProfitReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeOrderProfitReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderProfitReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply} returns this
*/
proto.mt4grpc.SubscribeOrderProfitReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply} returns this
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply} returns this
*/
proto.mt4grpc.SubscribeOrderProfitReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeOrderProfitReply} returns this
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeOrderProfitReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeTickValueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeTickValueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeTickValueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    interval: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeTickValueRequest}
 */
proto.mt4grpc.SubscribeTickValueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeTickValueRequest;
  return proto.mt4grpc.SubscribeTickValueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeTickValueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeTickValueRequest}
 */
proto.mt4grpc.SubscribeTickValueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeTickValueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeTickValueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeTickValueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeTickValueRequest} returns this
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeTickValueRequest} returns this
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 interval = 3;
 * @return {number}
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SubscribeTickValueRequest} returns this
 */
proto.mt4grpc.SubscribeTickValueRequest.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeTickValueReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeTickValueReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeTickValueReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeTickValueReply}
 */
proto.mt4grpc.SubscribeTickValueReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeTickValueReply;
  return proto.mt4grpc.SubscribeTickValueReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeTickValueReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeTickValueReply}
 */
proto.mt4grpc.SubscribeTickValueReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeTickValueReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeTickValueReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeTickValueReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeTickValueReply} returns this
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeTickValueReply} returns this
*/
proto.mt4grpc.SubscribeTickValueReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeTickValueReply} returns this
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeTickValueReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeOrderUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeOrderUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateRequest}
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeOrderUpdateRequest;
  return proto.mt4grpc.SubscribeOrderUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeOrderUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateRequest}
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeOrderUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeOrderUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeOrderUpdateRequest} returns this
 */
proto.mt4grpc.SubscribeOrderUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.SubscribeOrderUpdateReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeOrderUpdateReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeOrderUpdateReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderUpdateReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.mt4grpc.Order.toObject, includeInstance),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeOrderUpdateReply;
  return proto.mt4grpc.SubscribeOrderUpdateReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeOrderUpdateReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeOrderUpdateReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeOrderUpdateReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeOrderUpdateReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Order result = 1;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.getResultList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply} returns this
*/
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.setResultList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply} returns this
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.clearResultList = function() {
  return this.setResultList([]);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply} returns this
*/
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeOrderUpdateReply} returns this
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeOrderUpdateReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeQuoteHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryRequest}
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeQuoteHistoryRequest;
  return proto.mt4grpc.SubscribeQuoteHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryRequest}
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeQuoteHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryRequest} returns this
 */
proto.mt4grpc.SubscribeQuoteHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SubscribeQuoteHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryReply}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SubscribeQuoteHistoryReply;
  return proto.mt4grpc.SubscribeQuoteHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryReply}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SubscribeQuoteHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SubscribeQuoteHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryReply} returns this
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryReply} returns this
*/
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.SubscribeQuoteHistoryReply} returns this
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.SubscribeQuoteHistoryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderSendRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderSendRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderSendRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderSendRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operation: jspb.Message.getFieldWithDefault(msg, 3, 0),
    volume: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    slippage: jspb.Message.getFieldWithDefault(msg, 6, 0),
    stoploss: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    takeprofit: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    comment: jspb.Message.getFieldWithDefault(msg, 9, ""),
    magic: jspb.Message.getFieldWithDefault(msg, 10, 0),
    expiration: jspb.Message.getFieldWithDefault(msg, 11, ""),
    placedtype: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderSendRequest}
 */
proto.mt4grpc.OrderSendRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderSendRequest;
  return proto.mt4grpc.OrderSendRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderSendRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderSendRequest}
 */
proto.mt4grpc.OrderSendRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {!proto.mt4grpc.Op} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSlippage(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeprofit(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMagic(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiration(value);
      break;
    case 12:
      var value = /** @type {!proto.mt4grpc.PlacedType} */ (reader.readEnum());
      msg.setPlacedtype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderSendRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderSendRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderSendRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderSendRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSlippage();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getStoploss();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTakeprofit();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMagic();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getExpiration();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPlacedtype();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderSendRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.mt4grpc.OrderSendRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Op operation = 3;
 * @return {!proto.mt4grpc.Op}
 */
proto.mt4grpc.OrderSendRequest.prototype.getOperation = function() {
  return /** @type {!proto.mt4grpc.Op} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.mt4grpc.Op} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional double volume = 4;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getVolume = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setVolume = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional int32 slippage = 6;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getSlippage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setSlippage = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double stoploss = 7;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setStoploss = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double takeprofit = 8;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getTakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setTakeprofit = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string comment = 9;
 * @return {string}
 */
proto.mt4grpc.OrderSendRequest.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 magic = 10;
 * @return {number}
 */
proto.mt4grpc.OrderSendRequest.prototype.getMagic = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setMagic = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string expiration = 11;
 * @return {string}
 */
proto.mt4grpc.OrderSendRequest.prototype.getExpiration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setExpiration = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional PlacedType placedType = 12;
 * @return {!proto.mt4grpc.PlacedType}
 */
proto.mt4grpc.OrderSendRequest.prototype.getPlacedtype = function() {
  return /** @type {!proto.mt4grpc.PlacedType} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.mt4grpc.PlacedType} value
 * @return {!proto.mt4grpc.OrderSendRequest} returns this
 */
proto.mt4grpc.OrderSendRequest.prototype.setPlacedtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderSendReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderSendReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderSendReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderSendReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.Order.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderSendReply}
 */
proto.mt4grpc.OrderSendReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderSendReply;
  return proto.mt4grpc.OrderSendReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderSendReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderSendReply}
 */
proto.mt4grpc.OrderSendReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderSendReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderSendReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderSendReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderSendReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order result = 1;
 * @return {?proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderSendReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.Order} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {?proto.mt4grpc.Order|undefined} value
 * @return {!proto.mt4grpc.OrderSendReply} returns this
*/
proto.mt4grpc.OrderSendReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderSendReply} returns this
 */
proto.mt4grpc.OrderSendReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderSendReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderSendReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderSendReply} returns this
*/
proto.mt4grpc.OrderSendReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderSendReply} returns this
 */
proto.mt4grpc.OrderSendReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderSendReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderModifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderModifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderModifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderModifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stoploss: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    takeprofit: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    expiration: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderModifyRequest}
 */
proto.mt4grpc.OrderModifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderModifyRequest;
  return proto.mt4grpc.OrderModifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderModifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderModifyRequest}
 */
proto.mt4grpc.OrderModifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStoploss(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTakeprofit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpiration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderModifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderModifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderModifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderModifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStoploss();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTakeprofit();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getExpiration();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticket = 2;
 * @return {number}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getTicket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setTicket = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double stoploss = 3;
 * @return {number}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getStoploss = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setStoploss = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double takeprofit = 4;
 * @return {number}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getTakeprofit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setTakeprofit = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double price = 5;
 * @return {number}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string expiration = 6;
 * @return {string}
 */
proto.mt4grpc.OrderModifyRequest.prototype.getExpiration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderModifyRequest} returns this
 */
proto.mt4grpc.OrderModifyRequest.prototype.setExpiration = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderModifyReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderModifyReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderModifyReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderModifyReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.Order.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderModifyReply}
 */
proto.mt4grpc.OrderModifyReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderModifyReply;
  return proto.mt4grpc.OrderModifyReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderModifyReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderModifyReply}
 */
proto.mt4grpc.OrderModifyReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderModifyReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderModifyReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderModifyReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderModifyReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order result = 1;
 * @return {?proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderModifyReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.Order} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {?proto.mt4grpc.Order|undefined} value
 * @return {!proto.mt4grpc.OrderModifyReply} returns this
*/
proto.mt4grpc.OrderModifyReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderModifyReply} returns this
 */
proto.mt4grpc.OrderModifyReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderModifyReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderModifyReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderModifyReply} returns this
*/
proto.mt4grpc.OrderModifyReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderModifyReply} returns this
 */
proto.mt4grpc.OrderModifyReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderModifyReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderCloseByRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderCloseByRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderCloseByRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseByRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticket1: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ticket2: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderCloseByRequest}
 */
proto.mt4grpc.OrderCloseByRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderCloseByRequest;
  return proto.mt4grpc.OrderCloseByRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderCloseByRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderCloseByRequest}
 */
proto.mt4grpc.OrderCloseByRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket1(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket2(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderCloseByRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderCloseByRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderCloseByRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseByRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicket1();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTicket2();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderCloseByRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderCloseByRequest} returns this
 */
proto.mt4grpc.OrderCloseByRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticket1 = 2;
 * @return {number}
 */
proto.mt4grpc.OrderCloseByRequest.prototype.getTicket1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseByRequest} returns this
 */
proto.mt4grpc.OrderCloseByRequest.prototype.setTicket1 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 ticket2 = 3;
 * @return {number}
 */
proto.mt4grpc.OrderCloseByRequest.prototype.getTicket2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseByRequest} returns this
 */
proto.mt4grpc.OrderCloseByRequest.prototype.setTicket2 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderCloseByReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderCloseByReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderCloseByReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseByReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderCloseByReply}
 */
proto.mt4grpc.OrderCloseByReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderCloseByReply;
  return proto.mt4grpc.OrderCloseByReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderCloseByReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderCloseByReply}
 */
proto.mt4grpc.OrderCloseByReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderCloseByReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderCloseByReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderCloseByReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseByReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.OrderCloseByReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderCloseByReply} returns this
 */
proto.mt4grpc.OrderCloseByReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderCloseByReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderCloseByReply} returns this
*/
proto.mt4grpc.OrderCloseByReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderCloseByReply} returns this
 */
proto.mt4grpc.OrderCloseByReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderCloseByReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticket: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderDeleteRequest}
 */
proto.mt4grpc.OrderDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderDeleteRequest;
  return proto.mt4grpc.OrderDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderDeleteRequest}
 */
proto.mt4grpc.OrderDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderDeleteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderDeleteRequest} returns this
 */
proto.mt4grpc.OrderDeleteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticket = 2;
 * @return {number}
 */
proto.mt4grpc.OrderDeleteRequest.prototype.getTicket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderDeleteRequest} returns this
 */
proto.mt4grpc.OrderDeleteRequest.prototype.setTicket = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderDeleteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderDeleteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderDeleteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderDeleteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderDeleteReply}
 */
proto.mt4grpc.OrderDeleteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderDeleteReply;
  return proto.mt4grpc.OrderDeleteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderDeleteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderDeleteReply}
 */
proto.mt4grpc.OrderDeleteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderDeleteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderDeleteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderDeleteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderDeleteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.OrderDeleteReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderDeleteReply} returns this
 */
proto.mt4grpc.OrderDeleteReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderDeleteReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderDeleteReply} returns this
*/
proto.mt4grpc.OrderDeleteReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderDeleteReply} returns this
 */
proto.mt4grpc.OrderDeleteReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderDeleteReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderCloseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderCloseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderCloseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticket: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lots: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    slippage: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderCloseRequest}
 */
proto.mt4grpc.OrderCloseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderCloseRequest;
  return proto.mt4grpc.OrderCloseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderCloseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderCloseRequest}
 */
proto.mt4grpc.OrderCloseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicket(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLots(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSlippage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderCloseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderCloseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderCloseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLots();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getSlippage();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OrderCloseRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OrderCloseRequest} returns this
 */
proto.mt4grpc.OrderCloseRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticket = 2;
 * @return {number}
 */
proto.mt4grpc.OrderCloseRequest.prototype.getTicket = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseRequest} returns this
 */
proto.mt4grpc.OrderCloseRequest.prototype.setTicket = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double lots = 3;
 * @return {number}
 */
proto.mt4grpc.OrderCloseRequest.prototype.getLots = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseRequest} returns this
 */
proto.mt4grpc.OrderCloseRequest.prototype.setLots = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double price = 4;
 * @return {number}
 */
proto.mt4grpc.OrderCloseRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseRequest} returns this
 */
proto.mt4grpc.OrderCloseRequest.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 slippage = 5;
 * @return {number}
 */
proto.mt4grpc.OrderCloseRequest.prototype.getSlippage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderCloseRequest} returns this
 */
proto.mt4grpc.OrderCloseRequest.prototype.setSlippage = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderCloseReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderCloseReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderCloseReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.Order.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderCloseReply}
 */
proto.mt4grpc.OrderCloseReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderCloseReply;
  return proto.mt4grpc.OrderCloseReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderCloseReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderCloseReply}
 */
proto.mt4grpc.OrderCloseReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderCloseReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderCloseReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderCloseReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderCloseReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional Order result = 1;
 * @return {?proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderCloseReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.Order} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {?proto.mt4grpc.Order|undefined} value
 * @return {!proto.mt4grpc.OrderCloseReply} returns this
*/
proto.mt4grpc.OrderCloseReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderCloseReply} returns this
 */
proto.mt4grpc.OrderCloseReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderCloseReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OrderCloseReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OrderCloseReply} returns this
*/
proto.mt4grpc.OrderCloseReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderCloseReply} returns this
 */
proto.mt4grpc.OrderCloseReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderCloseReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.EventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.EventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.EventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.EventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.EventsRequest}
 */
proto.mt4grpc.EventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.EventsRequest;
  return proto.mt4grpc.EventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.EventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.EventsRequest}
 */
proto.mt4grpc.EventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.EventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.EventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.EventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.EventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.EventsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.EventsRequest} returns this
 */
proto.mt4grpc.EventsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.EventsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.EventsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.EventsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.EventsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.EventsReply}
 */
proto.mt4grpc.EventsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.EventsReply;
  return proto.mt4grpc.EventsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.EventsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.EventsReply}
 */
proto.mt4grpc.EventsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.EventsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.EventsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.EventsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.EventsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.EventsReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.EventsReply} returns this
 */
proto.mt4grpc.EventsReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.EventsReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.EventsReply} returns this
*/
proto.mt4grpc.EventsReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.EventsReply} returns this
 */
proto.mt4grpc.EventsReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.EventsReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnOrderUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnOrderUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnOrderUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnOrderUpdateRequest}
 */
proto.mt4grpc.OnOrderUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnOrderUpdateRequest;
  return proto.mt4grpc.OnOrderUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnOrderUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnOrderUpdateRequest}
 */
proto.mt4grpc.OnOrderUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnOrderUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnOrderUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnOrderUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnOrderUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnOrderUpdateRequest} returns this
 */
proto.mt4grpc.OnOrderUpdateRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.OrderUpdateSummary.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderUpdateSummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderUpdateSummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderUpdateSummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    update: (f = msg.getUpdate()) && proto.mt4grpc.OrderUpdateEventArgs.toObject(includeInstance, f),
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    equity: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    margin: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    freemargin: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    openedordersList: jspb.Message.toObjectList(msg.getOpenedordersList(),
    proto.mt4grpc.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderUpdateSummary}
 */
proto.mt4grpc.OrderUpdateSummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderUpdateSummary;
  return proto.mt4grpc.OrderUpdateSummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderUpdateSummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderUpdateSummary}
 */
proto.mt4grpc.OrderUpdateSummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.OrderUpdateEventArgs;
      reader.readMessage(value,proto.mt4grpc.OrderUpdateEventArgs.deserializeBinaryFromReader);
      msg.setUpdate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEquity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMargin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFreemargin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProfit(value);
      break;
    case 7:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addOpenedorders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderUpdateSummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderUpdateSummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderUpdateSummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.OrderUpdateEventArgs.serializeBinaryToWriter
    );
  }
  f = message.getBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getEquity();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getFreemargin();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getOpenedordersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderUpdateEventArgs Update = 1;
 * @return {?proto.mt4grpc.OrderUpdateEventArgs}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getUpdate = function() {
  return /** @type{?proto.mt4grpc.OrderUpdateEventArgs} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.OrderUpdateEventArgs, 1));
};


/**
 * @param {?proto.mt4grpc.OrderUpdateEventArgs|undefined} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
*/
proto.mt4grpc.OrderUpdateSummary.prototype.setUpdate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.clearUpdate = function() {
  return this.setUpdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.hasUpdate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double Balance = 2;
 * @return {number}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.setBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Equity = 3;
 * @return {number}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getEquity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.setEquity = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double Margin = 4;
 * @return {number}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getMargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.setMargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double FreeMargin = 5;
 * @return {number}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getFreemargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.setFreemargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double Profit = 6;
 * @return {number}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * repeated Order OpenedOrders = 7;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.getOpenedordersList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 7));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
*/
proto.mt4grpc.OrderUpdateSummary.prototype.setOpenedordersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderUpdateSummary.prototype.addOpenedorders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.OrderUpdateSummary} returns this
 */
proto.mt4grpc.OrderUpdateSummary.prototype.clearOpenedordersList = function() {
  return this.setOpenedordersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OrderUpdateEventArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OrderUpdateEventArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderUpdateEventArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    order: (f = msg.getOrder()) && proto.mt4grpc.Order.toObject(includeInstance, f),
    action: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OrderUpdateEventArgs}
 */
proto.mt4grpc.OrderUpdateEventArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OrderUpdateEventArgs;
  return proto.mt4grpc.OrderUpdateEventArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OrderUpdateEventArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OrderUpdateEventArgs}
 */
proto.mt4grpc.OrderUpdateEventArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.setOrder(value);
      break;
    case 2:
      var value = /** @type {!proto.mt4grpc.UpdateAction} */ (reader.readEnum());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OrderUpdateEventArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OrderUpdateEventArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OrderUpdateEventArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrder();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Order Order = 1;
 * @return {?proto.mt4grpc.Order}
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.getOrder = function() {
  return /** @type{?proto.mt4grpc.Order} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Order, 1));
};


/**
 * @param {?proto.mt4grpc.Order|undefined} value
 * @return {!proto.mt4grpc.OrderUpdateEventArgs} returns this
*/
proto.mt4grpc.OrderUpdateEventArgs.prototype.setOrder = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OrderUpdateEventArgs} returns this
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.clearOrder = function() {
  return this.setOrder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.hasOrder = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UpdateAction Action = 2;
 * @return {!proto.mt4grpc.UpdateAction}
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.getAction = function() {
  return /** @type {!proto.mt4grpc.UpdateAction} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mt4grpc.UpdateAction} value
 * @return {!proto.mt4grpc.OrderUpdateEventArgs} returns this
 */
proto.mt4grpc.OrderUpdateEventArgs.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnOrderUpdateReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnOrderUpdateReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderUpdateReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.OrderUpdateSummary.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnOrderUpdateReply}
 */
proto.mt4grpc.OnOrderUpdateReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnOrderUpdateReply;
  return proto.mt4grpc.OnOrderUpdateReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnOrderUpdateReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnOrderUpdateReply}
 */
proto.mt4grpc.OnOrderUpdateReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.OrderUpdateSummary;
      reader.readMessage(value,proto.mt4grpc.OrderUpdateSummary.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnOrderUpdateReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnOrderUpdateReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderUpdateReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.OrderUpdateSummary.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional OrderUpdateSummary result = 1;
 * @return {?proto.mt4grpc.OrderUpdateSummary}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.OrderUpdateSummary} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.OrderUpdateSummary, 1));
};


/**
 * @param {?proto.mt4grpc.OrderUpdateSummary|undefined} value
 * @return {!proto.mt4grpc.OnOrderUpdateReply} returns this
*/
proto.mt4grpc.OnOrderUpdateReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnOrderUpdateReply} returns this
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnOrderUpdateReply} returns this
*/
proto.mt4grpc.OnOrderUpdateReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnOrderUpdateReply} returns this
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnOrderUpdateReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnQuoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnQuoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnQuoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnQuoteRequest}
 */
proto.mt4grpc.OnQuoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnQuoteRequest;
  return proto.mt4grpc.OnQuoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnQuoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnQuoteRequest}
 */
proto.mt4grpc.OnQuoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnQuoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnQuoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnQuoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnQuoteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnQuoteRequest} returns this
 */
proto.mt4grpc.OnQuoteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnQuoteReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnQuoteReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnQuoteReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.QuoteEventArgs.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnQuoteReply}
 */
proto.mt4grpc.OnQuoteReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnQuoteReply;
  return proto.mt4grpc.OnQuoteReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnQuoteReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnQuoteReply}
 */
proto.mt4grpc.OnQuoteReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.QuoteEventArgs;
      reader.readMessage(value,proto.mt4grpc.QuoteEventArgs.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnQuoteReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnQuoteReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnQuoteReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.QuoteEventArgs.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional QuoteEventArgs result = 1;
 * @return {?proto.mt4grpc.QuoteEventArgs}
 */
proto.mt4grpc.OnQuoteReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.QuoteEventArgs} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.QuoteEventArgs, 1));
};


/**
 * @param {?proto.mt4grpc.QuoteEventArgs|undefined} value
 * @return {!proto.mt4grpc.OnQuoteReply} returns this
*/
proto.mt4grpc.OnQuoteReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnQuoteReply} returns this
 */
proto.mt4grpc.OnQuoteReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnQuoteReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnQuoteReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnQuoteReply} returns this
*/
proto.mt4grpc.OnQuoteReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnQuoteReply} returns this
 */
proto.mt4grpc.OnQuoteReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnQuoteReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnTickValueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnTickValueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnTickValueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnTickValueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnTickValueRequest}
 */
proto.mt4grpc.OnTickValueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnTickValueRequest;
  return proto.mt4grpc.OnTickValueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnTickValueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnTickValueRequest}
 */
proto.mt4grpc.OnTickValueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnTickValueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnTickValueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnTickValueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnTickValueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnTickValueRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnTickValueRequest} returns this
 */
proto.mt4grpc.OnTickValueRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.SymbolTickValue.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.SymbolTickValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.SymbolTickValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolTickValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tickvalue: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.SymbolTickValue}
 */
proto.mt4grpc.SymbolTickValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.SymbolTickValue;
  return proto.mt4grpc.SymbolTickValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.SymbolTickValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.SymbolTickValue}
 */
proto.mt4grpc.SymbolTickValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTickvalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.SymbolTickValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.SymbolTickValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.SymbolTickValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.SymbolTickValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTickvalue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string Symbol = 1;
 * @return {string}
 */
proto.mt4grpc.SymbolTickValue.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.SymbolTickValue} returns this
 */
proto.mt4grpc.SymbolTickValue.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double TickValue = 2;
 * @return {number}
 */
proto.mt4grpc.SymbolTickValue.prototype.getTickvalue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.SymbolTickValue} returns this
 */
proto.mt4grpc.SymbolTickValue.prototype.setTickvalue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnTickValueReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnTickValueReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnTickValueReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnTickValueReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.SymbolTickValue.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnTickValueReply}
 */
proto.mt4grpc.OnTickValueReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnTickValueReply;
  return proto.mt4grpc.OnTickValueReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnTickValueReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnTickValueReply}
 */
proto.mt4grpc.OnTickValueReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.SymbolTickValue;
      reader.readMessage(value,proto.mt4grpc.SymbolTickValue.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnTickValueReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnTickValueReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnTickValueReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnTickValueReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.SymbolTickValue.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional SymbolTickValue result = 1;
 * @return {?proto.mt4grpc.SymbolTickValue}
 */
proto.mt4grpc.OnTickValueReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.SymbolTickValue} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.SymbolTickValue, 1));
};


/**
 * @param {?proto.mt4grpc.SymbolTickValue|undefined} value
 * @return {!proto.mt4grpc.OnTickValueReply} returns this
*/
proto.mt4grpc.OnTickValueReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnTickValueReply} returns this
 */
proto.mt4grpc.OnTickValueReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnTickValueReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnTickValueReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnTickValueReply} returns this
*/
proto.mt4grpc.OnTickValueReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnTickValueReply} returns this
 */
proto.mt4grpc.OnTickValueReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnTickValueReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnOrderProfitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnOrderProfitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnOrderProfitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderProfitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnOrderProfitRequest}
 */
proto.mt4grpc.OnOrderProfitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnOrderProfitRequest;
  return proto.mt4grpc.OnOrderProfitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnOrderProfitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnOrderProfitRequest}
 */
proto.mt4grpc.OnOrderProfitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnOrderProfitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnOrderProfitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnOrderProfitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderProfitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnOrderProfitRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnOrderProfitRequest} returns this
 */
proto.mt4grpc.OnOrderProfitRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.ProfitUpdate.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.ProfitUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.ProfitUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.ProfitUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ProfitUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    equity: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    margin: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    freemargin: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    profit: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    ordersList: jspb.Message.toObjectList(msg.getOrdersList(),
    proto.mt4grpc.Order.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.ProfitUpdate}
 */
proto.mt4grpc.ProfitUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.ProfitUpdate;
  return proto.mt4grpc.ProfitUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.ProfitUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.ProfitUpdate}
 */
proto.mt4grpc.ProfitUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEquity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMargin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFreemargin(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProfit(value);
      break;
    case 6:
      var value = new proto.mt4grpc.Order;
      reader.readMessage(value,proto.mt4grpc.Order.deserializeBinaryFromReader);
      msg.addOrders(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.ProfitUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.ProfitUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.ProfitUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.ProfitUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getEquity();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getMargin();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getFreemargin();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getOrdersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.mt4grpc.Order.serializeBinaryToWriter
    );
  }
};


/**
 * optional double Balance = 1;
 * @return {number}
 */
proto.mt4grpc.ProfitUpdate.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.setBalance = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double Equity = 2;
 * @return {number}
 */
proto.mt4grpc.ProfitUpdate.prototype.getEquity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.setEquity = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double Margin = 3;
 * @return {number}
 */
proto.mt4grpc.ProfitUpdate.prototype.getMargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.setMargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double FreeMargin = 4;
 * @return {number}
 */
proto.mt4grpc.ProfitUpdate.prototype.getFreemargin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.setFreemargin = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double Profit = 5;
 * @return {number}
 */
proto.mt4grpc.ProfitUpdate.prototype.getProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.setProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * repeated Order Orders = 6;
 * @return {!Array<!proto.mt4grpc.Order>}
 */
proto.mt4grpc.ProfitUpdate.prototype.getOrdersList = function() {
  return /** @type{!Array<!proto.mt4grpc.Order>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Order, 6));
};


/**
 * @param {!Array<!proto.mt4grpc.Order>} value
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
*/
proto.mt4grpc.ProfitUpdate.prototype.setOrdersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.mt4grpc.Order=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Order}
 */
proto.mt4grpc.ProfitUpdate.prototype.addOrders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.mt4grpc.Order, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.ProfitUpdate} returns this
 */
proto.mt4grpc.ProfitUpdate.prototype.clearOrdersList = function() {
  return this.setOrdersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnOrderProfitReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnOrderProfitReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderProfitReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.ProfitUpdate.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnOrderProfitReply}
 */
proto.mt4grpc.OnOrderProfitReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnOrderProfitReply;
  return proto.mt4grpc.OnOrderProfitReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnOrderProfitReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnOrderProfitReply}
 */
proto.mt4grpc.OnOrderProfitReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.ProfitUpdate;
      reader.readMessage(value,proto.mt4grpc.ProfitUpdate.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnOrderProfitReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnOrderProfitReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnOrderProfitReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.ProfitUpdate.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProfitUpdate result = 1;
 * @return {?proto.mt4grpc.ProfitUpdate}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.ProfitUpdate} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.ProfitUpdate, 1));
};


/**
 * @param {?proto.mt4grpc.ProfitUpdate|undefined} value
 * @return {!proto.mt4grpc.OnOrderProfitReply} returns this
*/
proto.mt4grpc.OnOrderProfitReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnOrderProfitReply} returns this
 */
proto.mt4grpc.OnOrderProfitReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnOrderProfitReply} returns this
*/
proto.mt4grpc.OnOrderProfitReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnOrderProfitReply} returns this
 */
proto.mt4grpc.OnOrderProfitReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnOrderProfitReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnQuoteHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnQuoteHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnQuoteHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteHistoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnQuoteHistoryRequest}
 */
proto.mt4grpc.OnQuoteHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnQuoteHistoryRequest;
  return proto.mt4grpc.OnQuoteHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnQuoteHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnQuoteHistoryRequest}
 */
proto.mt4grpc.OnQuoteHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnQuoteHistoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnQuoteHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnQuoteHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnQuoteHistoryRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnQuoteHistoryRequest} returns this
 */
proto.mt4grpc.OnQuoteHistoryRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mt4grpc.QuoteHistoryEventArgs.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.QuoteHistoryEventArgs.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.QuoteHistoryEventArgs} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryEventArgs.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timeframe: jspb.Message.getFieldWithDefault(msg, 2, 0),
    barsList: jspb.Message.toObjectList(msg.getBarsList(),
    proto.mt4grpc.Bar.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs}
 */
proto.mt4grpc.QuoteHistoryEventArgs.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.QuoteHistoryEventArgs;
  return proto.mt4grpc.QuoteHistoryEventArgs.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.QuoteHistoryEventArgs} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs}
 */
proto.mt4grpc.QuoteHistoryEventArgs.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {!proto.mt4grpc.Timeframe} */ (reader.readEnum());
      msg.setTimeframe(value);
      break;
    case 3:
      var value = new proto.mt4grpc.Bar;
      reader.readMessage(value,proto.mt4grpc.Bar.deserializeBinaryFromReader);
      msg.addBars(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.QuoteHistoryEventArgs.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.QuoteHistoryEventArgs} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.QuoteHistoryEventArgs.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimeframe();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getBarsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mt4grpc.Bar.serializeBinaryToWriter
    );
  }
};


/**
 * optional string Symbol = 1;
 * @return {string}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs} returns this
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Timeframe Timeframe = 2;
 * @return {!proto.mt4grpc.Timeframe}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.getTimeframe = function() {
  return /** @type {!proto.mt4grpc.Timeframe} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.mt4grpc.Timeframe} value
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs} returns this
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.setTimeframe = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated Bar Bars = 3;
 * @return {!Array<!proto.mt4grpc.Bar>}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.getBarsList = function() {
  return /** @type{!Array<!proto.mt4grpc.Bar>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mt4grpc.Bar, 3));
};


/**
 * @param {!Array<!proto.mt4grpc.Bar>} value
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs} returns this
*/
proto.mt4grpc.QuoteHistoryEventArgs.prototype.setBarsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mt4grpc.Bar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mt4grpc.Bar}
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.addBars = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mt4grpc.Bar, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mt4grpc.QuoteHistoryEventArgs} returns this
 */
proto.mt4grpc.QuoteHistoryEventArgs.prototype.clearBarsList = function() {
  return this.setBarsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnQuoteHistoryReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnQuoteHistoryReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteHistoryReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.mt4grpc.QuoteHistoryEventArgs.toObject(includeInstance, f),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnQuoteHistoryReply}
 */
proto.mt4grpc.OnQuoteHistoryReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnQuoteHistoryReply;
  return proto.mt4grpc.OnQuoteHistoryReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnQuoteHistoryReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnQuoteHistoryReply}
 */
proto.mt4grpc.OnQuoteHistoryReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mt4grpc.QuoteHistoryEventArgs;
      reader.readMessage(value,proto.mt4grpc.QuoteHistoryEventArgs.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnQuoteHistoryReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnQuoteHistoryReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnQuoteHistoryReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mt4grpc.QuoteHistoryEventArgs.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional QuoteHistoryEventArgs result = 1;
 * @return {?proto.mt4grpc.QuoteHistoryEventArgs}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.getResult = function() {
  return /** @type{?proto.mt4grpc.QuoteHistoryEventArgs} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.QuoteHistoryEventArgs, 1));
};


/**
 * @param {?proto.mt4grpc.QuoteHistoryEventArgs|undefined} value
 * @return {!proto.mt4grpc.OnQuoteHistoryReply} returns this
*/
proto.mt4grpc.OnQuoteHistoryReply.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnQuoteHistoryReply} returns this
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnQuoteHistoryReply} returns this
*/
proto.mt4grpc.OnQuoteHistoryReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnQuoteHistoryReply} returns this
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnQuoteHistoryReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnDisconnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnDisconnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnDisconnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnDisconnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnDisconnectRequest}
 */
proto.mt4grpc.OnDisconnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnDisconnectRequest;
  return proto.mt4grpc.OnDisconnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnDisconnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnDisconnectRequest}
 */
proto.mt4grpc.OnDisconnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnDisconnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnDisconnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnDisconnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnDisconnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.mt4grpc.OnDisconnectRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnDisconnectRequest} returns this
 */
proto.mt4grpc.OnDisconnectRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mt4grpc.OnDisconnectReply.prototype.toObject = function(opt_includeInstance) {
  return proto.mt4grpc.OnDisconnectReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mt4grpc.OnDisconnectReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnDisconnectReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.mt4grpc.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mt4grpc.OnDisconnectReply}
 */
proto.mt4grpc.OnDisconnectReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mt4grpc.OnDisconnectReply;
  return proto.mt4grpc.OnDisconnectReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mt4grpc.OnDisconnectReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mt4grpc.OnDisconnectReply}
 */
proto.mt4grpc.OnDisconnectReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.mt4grpc.Error;
      reader.readMessage(value,proto.mt4grpc.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mt4grpc.OnDisconnectReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mt4grpc.OnDisconnectReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mt4grpc.OnDisconnectReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mt4grpc.OnDisconnectReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mt4grpc.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string result = 1;
 * @return {string}
 */
proto.mt4grpc.OnDisconnectReply.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mt4grpc.OnDisconnectReply} returns this
 */
proto.mt4grpc.OnDisconnectReply.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.mt4grpc.Error}
 */
proto.mt4grpc.OnDisconnectReply.prototype.getError = function() {
  return /** @type{?proto.mt4grpc.Error} */ (
    jspb.Message.getWrapperField(this, proto.mt4grpc.Error, 2));
};


/**
 * @param {?proto.mt4grpc.Error|undefined} value
 * @return {!proto.mt4grpc.OnDisconnectReply} returns this
*/
proto.mt4grpc.OnDisconnectReply.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mt4grpc.OnDisconnectReply} returns this
 */
proto.mt4grpc.OnDisconnectReply.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mt4grpc.OnDisconnectReply.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.mt4grpc.AccountType = {
  ACCOUNTTYPE_REAL: 0,
  ACCOUNTTYPE_CONTEST: 1,
  ACCOUNTTYPE_DEMO: 2
};

/**
 * @enum {number}
 */
proto.mt4grpc.PlacedType = {
  PLACEDTYPE_CLIENT: 0,
  PLACEDTYPE_EXPERT: 1,
  PLACEDTYPE_DEALER: 2,
  PLACEDTYPE_SIGNAL: 3,
  PLACEDTYPE_GATEWAY: 4,
  PLACEDTYPE_MOBILE: 5,
  PLACEDTYPE_WEB: 6,
  PLACEDTYPE_API: 7,
  PLACEDTYPE_DEFAULT: 8
};

/**
 * @enum {number}
 */
proto.mt4grpc.Op = {
  OP_BUY: 0,
  OP_SELL: 1,
  OP_BUYLIMIT: 2,
  OP_SELLLIMIT: 3,
  OP_BUYSTOP: 4,
  OP_SELLSTOP: 5,
  OP_BALANCE: 6,
  OP_CREDIT: 7
};

/**
 * @enum {number}
 */
proto.mt4grpc.Execution = {
  EXECUTION_REQUEST: 0,
  EXECUTION_INSTANT: 1,
  EXECUTION_MARKET: 2
};

/**
 * @enum {number}
 */
proto.mt4grpc.ProfitMode = {
  PROFITMODE_FOREX: 0,
  PROFITMODE_CFD: 1,
  PROFITMODE_FUTURES: 2
};

/**
 * @enum {number}
 */
proto.mt4grpc.MarginMode = {
  MARGINMODE_FOREX: 0,
  MARGINMODE_CFD: 1,
  MARGINMODE_FUTURES: 2,
  MARGINMODE_CFDINDEX: 3,
  MARGINMODE_CFDLEVERAGE: 4
};

/**
 * @enum {number}
 */
proto.mt4grpc.Timeframe = {
  TIMEFRAME_M0: 0,
  TIMEFRAME_M1: 1,
  TIMEFRAME_M5: 5,
  TIMEFRAME_M15: 15,
  TIMEFRAME_M30: 30,
  TIMEFRAME_H1: 60,
  TIMEFRAME_H4: 240,
  TIMEFRAME_D1: 1440,
  TIMEFRAME_W1: 10080,
  TIMEFRAME_MN1: 43200
};

/**
 * @enum {number}
 */
proto.mt4grpc.LogEventLevel = {
  LOGEVENTLEVEL_VERBOSE: 0,
  LOGEVENTLEVEL_DEBUG: 1,
  LOGEVENTLEVEL_INFORMATION: 2,
  LOGEVENTLEVEL_WARNING: 3,
  LOGEVENTLEVEL_ERROR: 4,
  LOGEVENTLEVEL_FATAL: 5
};

/**
 * @enum {number}
 */
proto.mt4grpc.UpdateAction = {
  UPDATEACTION_POSITIONOPEN: 0,
  UPDATEACTION_POSITIONCLOSE: 1,
  UPDATEACTION_POSITIONMODIFY: 2,
  UPDATEACTION_PENDINGOPEN: 3,
  UPDATEACTION_PENDINGCLOSE: 4,
  UPDATEACTION_PENDINGMODIFY: 5,
  UPDATEACTION_PENDINGFILL: 6,
  UPDATEACTION_BALANCE: 7,
  UPDATEACTION_CREDIT: 8
};

/**
 * @enum {number}
 */
proto.mt4grpc.ErrorCode = {
  INTERNAL_ERROR: 0,
  COMMON_ERROR: 2,
  INVALID_PARAM: 3,
  SERVER_BUSY: 4,
  OLD_VERSION: 5,
  NO_CONNECT: 6,
  NOT_ENOUGH_RIGHTS: 7,
  TOO_FREQUENT_REQUEST: 8,
  NO_CONNECTION: 10,
  SERVICE_NOT_AVAILABLE: 11,
  TOO_FREQUENT_REQUESTS: 12,
  SECRET_KEY_REQUIRED: 13,
  INVALID_ONETIME_PASSWORD: 14,
  ACCOUNT_DISABLED: 64,
  INVALID_ACCOUNT: 65,
  PUBLIC_KEY_NOT_FOUND: 66,
  TRADE_TIMEOUT: 128,
  INVALID_PRICES: 129,
  INVALID_SL_TP: 130,
  INVALID_VOLUME: 131,
  MARKET_CLOSED: 132,
  TRADE_DISABLED: 133,
  NOT_MONEY: 134,
  PRICE_CHANGED: 135,
  OFF_QUOTES: 136,
  BROKER_BUSY: 137,
  REQUOTE: 138,
  ORDER_LOCKED: 139,
  LONG_POS_ALLOWED: 140,
  TOO_MANY_REQUESTS: 141,
  ORDER_ACCEPTED: 142,
  ORDER_IN_PROCESS: 143,
  REQUEST_CANCELLED: 144,
  MODIFICATIONS_DENIED: 145,
  TRADE_CONTEXT_BUSY: 146,
  EXPIRATION_DISABLED: 147,
  TOO_MANY_ORDERS: 148,
  HEDGE_PROHIBITED: 149,
  RPROHIBITED_FIFO: 150,
  INVALID_TOKEN: 256,
  INVALID_SYMBOL: 257,
  INVALID_TICKET: 258,
  SAME_PARAMS: 259,
  CONNECT_ERROR: 260,
  TIMEOUT: 261
};

goog.object.extend(exports, proto.mt4grpc);
